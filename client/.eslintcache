[{"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\index.js":"1","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\App.js":"2","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\store.js":"3","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js":"4","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\helpers\\localStorage.js":"5","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\index.js":"6","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Header\\Header.js":"7","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Error\\Error.js":"8","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\AppReducer.js":"9","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Login\\Login.js":"10","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Join\\Join.js":"11","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Footer\\Footer.js":"12","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\NewsFeed\\NewsFeed.js":"13","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js":"14","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\api\\api.js":"15","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\NewsFeed\\helper.js":"16","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\index.js":"17","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\hoc\\withAuthRedirect.js":"18","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Header\\parts\\MobileMenu.js":"19","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Header\\parts\\DesktopMenu.js":"20","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\DarkTheme.js":"21","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\LightTheme.js":"22","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\russian.js":"23","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\english.js":"24","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Post\\Post.js":"25","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Feed\\Feed.js":"26","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Dialogs\\Chat\\Chat.js":"27","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\ChatReducer.js":"28","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Dialogs\\Chat\\Navbar\\Navbar.js":"29"},{"size":384,"mtime":1612089041838,"results":"30","hashOfConfig":"31"},{"size":2084,"mtime":1612207049792,"results":"32","hashOfConfig":"31"},{"size":1030,"mtime":1612207049814,"results":"33","hashOfConfig":"31"},{"size":2353,"mtime":1611953187284,"results":"34","hashOfConfig":"31"},{"size":485,"mtime":1611675527811,"results":"35","hashOfConfig":"31"},{"size":182,"mtime":1611953187289,"results":"36","hashOfConfig":"31"},{"size":3621,"mtime":1612207049808,"results":"37","hashOfConfig":"31"},{"size":1321,"mtime":1611953187252,"results":"38","hashOfConfig":"31"},{"size":1713,"mtime":1611953187283,"results":"39","hashOfConfig":"31"},{"size":6369,"mtime":1611953187263,"results":"40","hashOfConfig":"31"},{"size":7257,"mtime":1612107770120,"results":"41","hashOfConfig":"31"},{"size":4412,"mtime":1612116488344,"results":"42","hashOfConfig":"31"},{"size":6498,"mtime":1612206393486,"results":"43","hashOfConfig":"31"},{"size":5128,"mtime":1612205653517,"results":"44","hashOfConfig":"31"},{"size":2555,"mtime":1612207049793,"results":"45","hashOfConfig":"31"},{"size":512,"mtime":1611953187270,"results":"46","hashOfConfig":"31"},{"size":178,"mtime":1611953187280,"results":"47","hashOfConfig":"31"},{"size":764,"mtime":1611953187278,"results":"48","hashOfConfig":"31"},{"size":5651,"mtime":1612103529753,"results":"49","hashOfConfig":"31"},{"size":4140,"mtime":1612207049810,"results":"50","hashOfConfig":"31"},{"size":1819,"mtime":1612107789715,"results":"51","hashOfConfig":"31"},{"size":1819,"mtime":1612107789716,"results":"52","hashOfConfig":"31"},{"size":2560,"mtime":1612107789713,"results":"53","hashOfConfig":"31"},{"size":1831,"mtime":1612107789712,"results":"54","hashOfConfig":"31"},{"size":9814,"mtime":1612205653511,"results":"55","hashOfConfig":"31"},{"size":935,"mtime":1612205780519,"results":"56","hashOfConfig":"31"},{"size":6816,"mtime":1612207415058,"results":"57","hashOfConfig":"31"},{"size":1523,"mtime":1612207049813,"results":"58","hashOfConfig":"31"},{"size":1661,"mtime":1612207567167,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"cpe4bj",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\index.js",[],["121","122"],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\App.js",["123"],"import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { initializeApp } from './redux/reducers/AppReducer';\nimport { getTheme } from './themes/index';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { LinearProgress } from '@material-ui/core';\nimport Header from './components/Header/Header';\nimport Login from './components/Login/Login';\nimport Join from './components/Join/Join';\nimport NewsFeed from './components/NewsFeed/NewsFeed';\nimport Error from './components/Error/Error';\nimport Chat from './components/Dialogs/Chat/Chat';\nimport Footer from './components/Footer/Footer';\n\nconst App = ({ token, theme, initialized, initializeApp }) => {\n    const currentTheme = getTheme(theme);\n\n    useEffect(() => {\n        initializeApp(token);\n    }, []);\n\n    return (\n        <ThemeProvider theme={createMuiTheme(currentTheme)}>\n            <>\n                <CssBaseline />\n                {initialized ? (\n                    <>\n                        <Header />\n\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/feed\" />\n                            <Route path=\"/login\" exact component={Login} />\n                            <Route path=\"/join\" exact component={Join} />\n                            <Route path=\"/feed\" exact component={NewsFeed} />\n                            <Route path=\"/messenger\" exact component={Chat} />\n                            <Route component={Error} />\n                        </Switch>\n\n                        <Footer />\n                    </>\n                ) : (\n                    <LinearProgress />\n                )}\n            </>\n        </ThemeProvider>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n    token: state.auth.token,\n    theme: state.app.theme,\n});\n\nexport default connect(mapStateToProps, { initializeApp })(App);\n","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\store.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\helpers\\localStorage.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\index.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Error\\Error.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\AppReducer.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Login\\Login.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Join\\Join.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\NewsFeed\\NewsFeed.js",["124","125","126"],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\api\\api.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\NewsFeed\\helper.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\index.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Header\\parts\\MobileMenu.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Header\\parts\\DesktopMenu.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\DarkTheme.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\LightTheme.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\russian.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\english.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Post\\Post.js",["127"],"import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport styles from './Post.module.css';\nimport { Formik, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport {\n    Card,\n    CardHeader,\n    CardMedia,\n    CardContent,\n    CardActions,\n    Avatar,\n    IconButton,\n    Typography,\n    Collapse,\n    Paper,\n} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteIconBorder from '@material-ui/icons/FavoriteBorder';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport userAvatar from './assets/images/user.svg';\nimport SendIcon from '@material-ui/icons/Send';\nimport { setComment, getComments, setLike } from '../../redux/reducers/NewsReducer';\nimport * as Yup from 'yup';\nimport russian from '../../languages/russian';\nimport english from '../../languages/english';\n\nconst CommentSchema = Yup.object().shape({\n    text: Yup.string().min(1, 'Too Short!'),\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 650,\n        margin: 'auto',\n        marginTop: 10,\n        marginBottom: 10,\n        padding: '0px 20px 20px',\n        [theme.breakpoints.down('700')]: {\n            width: 350,\n        },\n        backgroundColor: `${theme.palette.post.default} !important`,\n    },\n    content: {\n        borderBottom: `4px solid`,\n        borderColor: `${theme.palette.background.default} !important`,\n    },\n    header: {\n        fontSize: 17,\n        fontWeight: 450,\n    },\n    contentHeader: {\n        padding: `10px 0px`,\n    },\n    media: {\n        height: 0,\n        backgroundSize: '100% 100%',\n        paddingTop: '56.25%',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    icon: {\n        font: 50,\n    },\n    commentSection: {\n        padding: '15px 0',\n    },\n    paper: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 700,\n        boxShadow: 'none',\n        backgroundColor: `${theme.palette.background.default} !important`,\n    },\n    avatar: {\n        backgroundColor: `#5181b8!important`,\n    },\n    input: {\n        border: '2px solid',\n        borderRadius: '5px',\n        borderColor: `${theme.palette.primary.main} !important`,\n        marginLeft: theme.spacing(1),\n        flex: 1,\n        padding: '5px 15px ',\n    },\n    iconButton: {\n        padding: 10,\n    },\n    liked: {\n        font: 50,\n        color: '#FF0000',\n    },\n    text: {\n        color: `${theme.palette.newsfeed.contrastText} !important`,\n        fontSize: '1rem',\n    },\n    icon: {\n        color: `${theme.palette.newsfeed.contrastText} !important`,\n        fontSize: '1.5rem',\n    },\n}));\n\nconst Post = (props) => {\n    const { posts, post, user, token, language, setComment, getComments, setLike } = props;\n\n    const classes = useStyles();\n\n    const translate = language === 'english' ? english : russian;\n    const initialValues = { text: '' };\n    const [expanded, setExpanded] = useState(false);\n    const [liked, setLiked] = useState(() => {\n        if (!post.likes.length) {\n            return false;\n        }\n        if (\n            post.likes.find((el) => {\n                return el.postId === post.id && el.userId === user.id;\n            })\n        ) {\n            return true;\n        }\n        return false;\n    });\n    const [postState, setPostState] = useState(<SendIcon />);\n\n    const handleExpandClick = () => {\n        getComments({ posts, postId: post.id, token });\n        setExpanded(!expanded);\n    };\n\n    const handleLikeClick = async () => {\n        await setLike({ posts, postId: post.id, userId: user.id, token });\n        setLiked(() => {\n            if (\n                post.likes.find((el) => {\n                    return el.postId === post.id && el.userId === user.id;\n                })\n            ) {\n                return true;\n            }\n            return false;\n        });\n    };\n\n    const handleSubmit = async (values, { setSubmitting }) => {\n        setPostState(<CircularProgress style={{ height: '40px', width: '35px' }} />);\n        await setComment({\n            posts,\n            post,\n            token,\n            query: {\n                postId: post.id,\n                text: values.text,\n                user: { login: user.login, avatar: user.avatar },\n            },\n            setSubmitting,\n        });\n        values.text = '';\n        setPostState(<SendIcon />);\n    };\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                classes={{\n                    title: classes.header,\n                }}\n                avatar={\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                        {post.user?.avatar ? (\n                            <img src={post.user.avatar} alt=\"Avatar\" />\n                        ) : (\n                            <img src={userAvatar} alt=\"Avatar\" />\n                        )}\n                    </Avatar>\n                }\n                title={post.user.login}\n            />\n\n            {post.photo ? (\n                <CardMedia\n                    className={classes.media}\n                    image={post.photo}\n                    title=\"Post image\"\n                    src={post.photo}\n                />\n            ) : null}\n\n            {post.text ? (\n                <CardContent className={classes.content}>\n                    <Typography className={classes.text}>{post.text}</Typography>\n                </CardContent>\n            ) : null}\n\n            <CardActions disableSpacing className={classes.content}>\n                <IconButton\n                    className={liked ? classes.liked : classes.icon}\n                    aria-label=\"like\"\n                    onClick={handleLikeClick}\n                >\n                    {liked ? <FavoriteIcon /> : <FavoriteIconBorder />}\n\n                    <Typography className={classes.icon}>{post.likes.length} </Typography>\n                </IconButton>\n\n                <IconButton aria-label=\"comment\" onClick={handleExpandClick}>\n                    <CommentIcon />\n                    <Typography className={classes.icon}>{post.commentsCount}</Typography>\n                </IconButton>\n            </CardActions>\n\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit className={classes.commentSection}>\n                {post.comments?.map((comment) => {\n                    return (\n                        <CardContent className={classes.content}>\n                            <CardHeader\n                                classes={{\n                                    title: classes.header,\n                                }}\n                                className={classes.contentHeader}\n                                avatar={\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                        {post.user.avatar ? (\n                                            <img src={comment.user.avatar} alt=\"Avatar\" />\n                                        ) : (\n                                            <img src={userAvatar} alt=\"Avatar\" />\n                                        )}\n                                    </Avatar>\n                                }\n                                title={comment.user.login ? comment.user.login : 'undefined'}\n                                subheader={<Typography>{comment.text}</Typography>}\n                            />\n                        </CardContent>\n                    );\n                })}\n\n                <Formik\n                    initialValues={initialValues}\n                    onSubmit={handleSubmit}\n                    validationSchema={CommentSchema}\n                >\n                    {({ submitForm, isSubmitting }) => (\n                        <form>\n                            <div className={styles.inputContainer}>\n                                <Paper component=\"form\" className={classes.paper}>\n                                    <Field\n                                        className={classes.input}\n                                        multiline={true}\n                                        component={TextField}\n                                        name=\"text\"\n                                        fullWidth={true}\n                                        placeholder={translate['post.placeholder']}\n                                    />\n                                    <IconButton\n                                        type=\"submit\"\n                                        className={classes.iconButton}\n                                        aria-label=\"search\"\n                                        onClick={submitForm}\n                                        disabled={isSubmitting}\n                                    >\n                                        {postState}\n                                    </IconButton>\n                                </Paper>\n                            </div>\n                        </form>\n                    )}\n                </Formik>\n            </Collapse>\n        </Card>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n    token: state.auth.token,\n    posts: state.news.posts,\n    language: state.app.language,\n});\n\nexport default compose(\n    connect(mapStateToProps, { setComment, getComments, setLike }),\n    //withLoginRedirect\n)(Post);\n","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Feed\\Feed.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Dialogs\\Chat\\Chat.js",["128"],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\ChatReducer.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Dialogs\\Chat\\Navbar\\Navbar.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":24,"column":8,"nodeType":"135","endLine":24,"endColumn":10,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":36,"column":8,"nodeType":"135","endLine":36,"endColumn":10,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":54,"column":17,"nodeType":"141","endLine":54,"endColumn":68},{"ruleId":"133","severity":1,"message":"142","line":107,"column":8,"nodeType":"135","endLine":107,"endColumn":32,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":19,"column":5,"nodeType":"146","messageId":"147","endLine":19,"endColumn":9},{"ruleId":"133","severity":1,"message":"148","line":28,"column":8,"nodeType":"135","endLine":28,"endColumn":10,"suggestions":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initializeApp' and 'token'. Either include them or remove the dependency array. If 'initializeApp' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["152"],"React Hook useEffect has missing dependencies: 'getPosts' and 'token'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["153"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'translate'. Either include it or remove the dependency array.",["154"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getDialogs' and 'token'. Either include them or remove the dependency array.",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [initializeApp, token]",{"range":"164","text":"165"},"Update the dependencies array to be: [getPosts, token]",{"range":"166","text":"167"},"Update the dependencies array to be: [language, setPostState, translate]",{"range":"168","text":"169"},"Update the dependencies array to be: [getDialogs, token]",{"range":"170","text":"171"},[972,974],"[initializeApp, token]",[1290,1292],"[getPosts, token]",[3381,3405],"[language, setPostState, translate]",[1061,1063],"[getDialogs, token]"]