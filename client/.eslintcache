[{"D:\\RS\\facebook\\rsclone\\client\\src\\index.js":"1","D:\\RS\\facebook\\rsclone\\client\\src\\App.js":"2","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\store.js":"3","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AppReducer.js":"4","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js":"5","D:\\RS\\facebook\\rsclone\\client\\src\\themes\\index.js":"6","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\helpers\\localStorage.js":"7","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js":"8","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\Header.js":"9","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Login\\Login.js":"10","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Join\\Join.js":"11","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Footer\\Footer.js":"12","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Error\\Error.js":"13","D:\\RS\\facebook\\rsclone\\client\\src\\api\\api.js":"14","D:\\RS\\facebook\\rsclone\\client\\src\\themes\\DarkTheme.js":"15","D:\\RS\\facebook\\rsclone\\client\\src\\themes\\LightTheme.js":"16","D:\\RS\\facebook\\rsclone\\client\\src\\languages\\index.js":"17","D:\\RS\\facebook\\rsclone\\client\\src\\hoc\\withAuthRedirect.js":"18","D:\\RS\\facebook\\rsclone\\client\\src\\languages\\english.js":"19","D:\\RS\\facebook\\rsclone\\client\\src\\languages\\russian.js":"20","D:\\RS\\facebook\\rsclone\\client\\src\\components\\NewsFeed\\NewsFeed.js":"21","D:\\RS\\facebook\\rsclone\\client\\src\\components\\NewsFeed\\helper.js":"22","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Post\\Post.js":"23"},{"size":467,"mtime":1610300647375,"results":"24","hashOfConfig":"25"},{"size":2011,"mtime":1611941764826,"results":"26","hashOfConfig":"25"},{"size":987,"mtime":1611907061589,"results":"27","hashOfConfig":"25"},{"size":1784,"mtime":1611941764828,"results":"28","hashOfConfig":"25"},{"size":5299,"mtime":1611942494634,"results":"29","hashOfConfig":"25"},{"size":188,"mtime":1611941764829,"results":"30","hashOfConfig":"25"},{"size":505,"mtime":1611656562519,"results":"31","hashOfConfig":"25"},{"size":2438,"mtime":1611941764829,"results":"32","hashOfConfig":"25"},{"size":3701,"mtime":1611941764827,"results":"33","hashOfConfig":"25"},{"size":6507,"mtime":1611941764828,"results":"34","hashOfConfig":"25"},{"size":7420,"mtime":1611941764827,"results":"35","hashOfConfig":"25"},{"size":4529,"mtime":1611941764826,"results":"36","hashOfConfig":"25"},{"size":1364,"mtime":1611941764826,"results":"37","hashOfConfig":"25"},{"size":1902,"mtime":1611909468892,"results":"38","hashOfConfig":"25"},{"size":1900,"mtime":1612002692911,"results":"39","hashOfConfig":"25"},{"size":1900,"mtime":1612000647632,"results":"40","hashOfConfig":"25"},{"size":184,"mtime":1611941764828,"results":"41","hashOfConfig":"25"},{"size":794,"mtime":1611851434259,"results":"42","hashOfConfig":"25"},{"size":1723,"mtime":1612029180786,"results":"43","hashOfConfig":"25"},{"size":2424,"mtime":1612029171203,"results":"44","hashOfConfig":"25"},{"size":6681,"mtime":1612029200035,"results":"45","hashOfConfig":"25"},{"size":532,"mtime":1611774219899,"results":"46","hashOfConfig":"25"},{"size":10040,"mtime":1612000717295,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"101x991",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},"D:\\RS\\facebook\\rsclone\\client\\src\\index.js",[],["98","99"],"D:\\RS\\facebook\\rsclone\\client\\src\\App.js",["100"],"import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { initializeApp } from './redux/reducers/AppReducer';\r\nimport { getTheme } from './themes/index';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { LinearProgress } from '@material-ui/core';\r\nimport Header from './components/Header/Header';\r\nimport Login from './components/Login/Login';\r\nimport Join from './components/Join/Join';\r\nimport NewsFeed from './components/NewsFeed/NewsFeed';\r\nimport Error from './components/Error/Error';\r\nimport Footer from './components/Footer/Footer';\r\n\r\nconst App = ({ token, theme, initialized, initializeApp }) => {\r\n    const currentTheme = getTheme(theme);\r\n\r\n    useEffect(() => {\r\n        initializeApp(token);\r\n    }, []);\r\n\r\n    return (\r\n        <ThemeProvider theme={createMuiTheme(currentTheme)}>\r\n            <>\r\n                <CssBaseline />\r\n                {initialized ? (\r\n                    <>\r\n                        <Header />\r\n\r\n                        <Switch>\r\n                            <Redirect exact from=\"/\" to=\"/feed\" />\r\n                            <Route path=\"/login\" exact component={Login} />\r\n                            <Route path=\"/join\" exact component={Join} />\r\n                            <Route path=\"/feed\" exact component={NewsFeed} />\r\n                            <Route component={Error} />\r\n                        </Switch>\r\n\r\n                        <Footer />\r\n                    </>\r\n                ) : (\r\n                    <LinearProgress />\r\n                )}\r\n            </>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n    token: state.auth.token,\r\n    theme: state.app.theme,\r\n});\r\n\r\nexport default connect(mapStateToProps, { initializeApp })(App);\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\store.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AppReducer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\themes\\index.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\helpers\\localStorage.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\Header.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Login\\Login.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Join\\Join.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Footer\\Footer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Error\\Error.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\api\\api.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\themes\\DarkTheme.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\themes\\LightTheme.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\languages\\index.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\hoc\\withAuthRedirect.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\languages\\english.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\languages\\russian.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\NewsFeed\\NewsFeed.js",["101","102","103"],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\NewsFeed\\helper.js",[],["104","105"],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Post\\Post.js",["106"],"import { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styles from './Post.module.css';\r\nimport { Formik, Field } from 'formik';\r\nimport { TextField } from 'formik-material-ui';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardMedia,\r\n    CardContent,\r\n    CardActions,\r\n    Avatar,\r\n    IconButton,\r\n    Typography,\r\n    Collapse,\r\n    Paper,\r\n} from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteIconBorder from '@material-ui/icons/FavoriteBorder';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport userAvatar from './assets/images/user.svg';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { setComment, getComments, setLike } from '../../redux/reducers/NewsReducer';\r\nimport * as Yup from 'yup';\r\nimport russian from '../../languages/russian';\r\nimport english from '../../languages/english';\r\n\r\nconst CommentSchema = Yup.object().shape({\r\n    text: Yup.string().min(1, 'Too Short!'),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 650,\r\n        margin: 'auto',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        padding: '0px 20px 20px',\r\n        [theme.breakpoints.down('700')]: {\r\n            width: 350,\r\n        },\r\n        backgroundColor: `${theme.palette.post.default} !important`,\r\n    },\r\n    content: {\r\n        borderBottom: `4px solid`,\r\n        borderColor: `${theme.palette.background.secondary} !important`,\r\n    },\r\n    header: {\r\n        fontSize: 17,\r\n        fontWeight: 450,\r\n    },\r\n    contentHeader: {\r\n        padding: `10px 0px`,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        backgroundSize: '100% 100%',\r\n        paddingTop: '56.25%',\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    icon: {\r\n        font: 50,\r\n    },\r\n    commentSection: {\r\n        padding: '15px 0',\r\n    },\r\n    paper: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 700,\r\n        boxShadow: 'none',\r\n        backgroundColor: `${theme.palette.post.default} !important`,\r\n    },\r\n    avatar: {\r\n        backgroundColor: `#5181b8!important`,\r\n    },\r\n    input: {\r\n        border: '2px solid',\r\n        borderRadius: '5px',\r\n        borderColor: `${theme.palette.background.secondary} !important`,\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        padding: '5px 15px ',\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    liked: {\r\n        font: 50,\r\n        color: '#FF0000',\r\n    },\r\n    text: {\r\n        color: `${theme.palette.newsfeed.contrastText} !important`,\r\n        fontSize: '1rem',\r\n    },\r\n    icon: {\r\n        color: `${theme.palette.newsfeed.contrastText} !important`,\r\n        fontSize: '1.5rem',\r\n    },\r\n}));\r\n\r\nconst Post = (props) => {\r\n    const { posts, post, user, token, language, setComment, getComments, setLike } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const translate = language === 'english' ? english : russian;\r\n    const initialValues = { text: '' };\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [liked, setLiked] = useState(() => {\r\n        if (\r\n            post.likes.find((el) => {\r\n                return el.postId === post.id && el.userId === user.id;\r\n            })\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    const [postState, setPostState] = useState(<SendIcon />);\r\n\r\n    const handleExpandClick = () => {\r\n        getComments({ posts, postId: post.id, token });\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleLikeClick = async () => {\r\n        await setLike({ posts, postId: post.id, userId: user.id, token });\r\n        setLiked(() => {\r\n            if (\r\n                post.likes.find((el) => {\r\n                    return el.postId === post.id && el.userId === user.id;\r\n                })\r\n            ) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (values, { setSubmitting }) => {\r\n        setPostState(<CircularProgress style={{ height: '40px', width: '35px' }} />);\r\n        await setComment({\r\n            posts,\r\n            post,\r\n            token,\r\n            query: {\r\n                postId: post.id,\r\n                text: values.text,\r\n                user: { login: user.login, avatar: user.avatar },\r\n            },\r\n            setSubmitting,\r\n        });\r\n        values.text = '';\r\n        setPostState(<SendIcon />);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                classes={{\r\n                    title: classes.header,\r\n                }}\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        {post.user?.avatar ? (\r\n                            <img src={post.user.avatar} alt=\"Avatar\" />\r\n                        ) : (\r\n                            <img src={userAvatar} alt=\"Avatar\" />\r\n                        )}\r\n                    </Avatar>\r\n                }\r\n                title={post.user.login}\r\n            />\r\n\r\n            {post.photo ? (\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={post.photo}\r\n                    title=\"Post image\"\r\n                    src={post.photo}\r\n                />\r\n            ) : null}\r\n\r\n            {post.text ? (\r\n                <CardContent className={classes.content}>\r\n                    <Typography className={classes.text}>{post.text}</Typography>\r\n                </CardContent>\r\n            ) : null}\r\n\r\n            <CardActions disableSpacing className={classes.content}>\r\n                <IconButton\r\n                    className={liked ? classes.liked : classes.icon}\r\n                    aria-label=\"like\"\r\n                    onClick={handleLikeClick}\r\n                >\r\n                    {liked ? <FavoriteIcon /> : <FavoriteIconBorder />}\r\n\r\n                    <Typography className={classes.icon}>{post.likes.length} </Typography>\r\n                </IconButton>\r\n\r\n                <IconButton aria-label=\"comment\" onClick={handleExpandClick}>\r\n                    <CommentIcon />\r\n                    <Typography className={classes.icon}>{post.commentsCount}</Typography>\r\n                </IconButton>\r\n            </CardActions>\r\n\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit className={classes.commentSection}>\r\n                {post.comments?.map((comment) => {\r\n                    return (\r\n                        <CardContent className={classes.content}>\r\n                            <CardHeader\r\n                                classes={{\r\n                                    title: classes.header,\r\n                                }}\r\n                                className={classes.contentHeader}\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        {post.user.avatar ? (\r\n                                            <img src={comment.user.avatar} alt=\"Avatar\" />\r\n                                        ) : (\r\n                                            <img src={userAvatar} alt=\"Avatar\" />\r\n                                        )}\r\n                                    </Avatar>\r\n                                }\r\n                                title={comment.user.login ? comment.user.login : 'undefined'}\r\n                                subheader={<Typography>{comment.text}</Typography>}\r\n                            />\r\n                        </CardContent>\r\n                    );\r\n                })}\r\n\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    onSubmit={handleSubmit}\r\n                    validationSchema={CommentSchema}\r\n                >\r\n                    {({ submitForm, isSubmitting }) => (\r\n                        <form>\r\n                            <div className={styles.inputContainer}>\r\n                                <Paper component=\"form\" className={classes.paper}>\r\n                                    <Field\r\n                                        className={classes.input}\r\n                                        multiline={true}\r\n                                        component={TextField}\r\n                                        name=\"text\"\r\n                                        fullWidth={true}\r\n                                        placeholder={translate['Post.placeholder']}\r\n                                    />\r\n                                    <IconButton\r\n                                        type=\"submit\"\r\n                                        className={classes.iconButton}\r\n                                        aria-label=\"search\"\r\n                                        onClick={submitForm}\r\n                                        disabled={isSubmitting}\r\n                                    >\r\n                                        {postState}\r\n                                    </IconButton>\r\n                                </Paper>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.user,\r\n    token: state.auth.token,\r\n    posts: state.news.posts,\r\n    language: state.app.language,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setComment, getComments, setLike }),\r\n    //withLoginRedirect\r\n)(Post);\r\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":23,"column":8,"nodeType":"113","endLine":23,"endColumn":10,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":34,"column":8,"nodeType":"113","endLine":34,"endColumn":10,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":51,"column":17,"nodeType":"119","endLine":51,"endColumn":68},{"ruleId":"111","severity":1,"message":"120","line":103,"column":8,"nodeType":"113","endLine":103,"endColumn":32,"suggestions":"121"},{"ruleId":"107","replacedBy":"122"},{"ruleId":"109","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":109,"column":5,"nodeType":"126","messageId":"127","endLine":109,"endColumn":9},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initializeApp' and 'token'. Either include them or remove the dependency array. If 'initializeApp' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["130"],"React Hook useEffect has missing dependencies: 'getPosts' and 'token'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["131"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'translate'. Either include it or remove the dependency array.",["132"],["128"],["129"],"no-dupe-keys","Duplicate key 'icon'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [initializeApp, token]",{"range":"139","text":"140"},"Update the dependencies array to be: [getPosts, token]",{"range":"141","text":"142"},"Update the dependencies array to be: [language, setPostState, translate]",{"range":"143","text":"144"},[942,944],"[initializeApp, token]",[1289,1291],"[getPosts, token]",[3450,3474],"[language, setPostState, translate]"]