[{"D:\\RS\\facebook\\rsclone\\client\\src\\index.js":"1","D:\\RS\\facebook\\rsclone\\client\\src\\App.js":"2","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\store.js":"3","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js":"4","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\Header.js":"5","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Error\\Error.js":"6","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Login\\Login.js":"7","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Newsfeed\\Newsfeed.js":"8","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Post\\Post.js":"9","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js":"10","D:\\RS\\facebook\\rsclone\\client\\src\\api\\api.js":"11","D:\\RS\\facebook\\rsclone\\client\\src\\hoc\\withAuthRedirect.js":"12","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Upload\\Upload.js":"13","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Newsfeed\\helper.js":"14","D:\\RS\\facebook\\rsclone\\client\\src\\themes\\DarkTheme.js":"15","D:\\RS\\facebook\\rsclone\\client\\src\\themes\\LightTheme.js":"16","D:\\RS\\facebook\\rsclone\\client\\src\\languages\\english.js":"17","D:\\RS\\facebook\\rsclone\\client\\src\\languages\\russian.js":"18","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\helpers\\localStorage.js":"19","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Join\\Join.js":"20","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AppReducer.js":"21","D:\\RS\\facebook\\rsclone\\client\\src\\themes\\index.js":"22","D:\\RS\\facebook\\rsclone\\client\\src\\languages\\index.js":"23"},{"size":467,"mtime":1610300647375,"results":"24","hashOfConfig":"25"},{"size":1867,"mtime":1611830356861,"results":"26","hashOfConfig":"25"},{"size":991,"mtime":1611838432769,"results":"27","hashOfConfig":"25"},{"size":2445,"mtime":1611675643748,"results":"28","hashOfConfig":"25"},{"size":3981,"mtime":1611828079943,"results":"29","hashOfConfig":"25"},{"size":789,"mtime":1611827565637,"results":"30","hashOfConfig":"25"},{"size":2737,"mtime":1611675643629,"results":"31","hashOfConfig":"25"},{"size":5408,"mtime":1611852065958,"results":"32","hashOfConfig":"25"},{"size":7744,"mtime":1611863091834,"results":"33","hashOfConfig":"25"},{"size":4028,"mtime":1611868785539,"results":"34","hashOfConfig":"25"},{"size":1777,"mtime":1611861456864,"results":"35","hashOfConfig":"25"},{"size":794,"mtime":1611851434259,"results":"36","hashOfConfig":"25"},{"size":588,"mtime":1610912540050,"results":"37","hashOfConfig":"38"},{"size":532,"mtime":1611774219899,"results":"39","hashOfConfig":"25"},{"size":396,"mtime":1611826456811,"results":"40","hashOfConfig":"25"},{"size":313,"mtime":1611762916380,"results":"41","hashOfConfig":"25"},{"size":268,"mtime":1611827918829,"results":"42","hashOfConfig":"25"},{"size":358,"mtime":1611827947834,"results":"43","hashOfConfig":"25"},{"size":505,"mtime":1611656562519,"results":"44","hashOfConfig":"25"},{"size":3772,"mtime":1611675643629,"results":"45","hashOfConfig":"25"},{"size":1615,"mtime":1611827455879,"results":"46","hashOfConfig":"25"},{"size":295,"mtime":1611827408323,"results":"47","hashOfConfig":"25"},{"size":314,"mtime":1611827465358,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"11l1tn5",{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"101x991",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"D:\\RS\\facebook\\rsclone\\client\\src\\index.js",[],["104","105"],"D:\\RS\\facebook\\rsclone\\client\\src\\App.js",["106","107","108"],"import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/reducers/AppReducer';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { LinearProgress } from '@material-ui/core';\r\nimport Header from './components/Header/Header';\r\nimport Login from './components/Login/Login';\r\nimport Join from './components/Join/Join';\r\nimport Error from './components/Error/Error';\r\nimport Post from './components/Post/Post';\r\nimport Newsfeed from './components/Newsfeed/Newsfeed';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { getTheme } from './themes/index';\r\n\r\nconst App = (props) => {\r\n    const { token, theme } = props;\r\n    const currentTheme = getTheme(theme);\r\n\r\n    useEffect(() => {\r\n        props.initializeApp(token);\r\n    }, []);\r\n\r\n    return (\r\n        <ThemeProvider theme={currentTheme}>\r\n            <>\r\n                <CssBaseline />\r\n                {props.initialized ? (\r\n                    <>\r\n                        <Header />\r\n\r\n                        <Switch>\r\n                            <Route path=\"/login\" exact component={Login} />\r\n                            <Route path=\"/join\" exact component={Join} />\r\n                            <Route path=\"/feed\" exact component={Newsfeed} />\r\n                            <Route component={Error} />\r\n                        </Switch>\r\n                    </>\r\n                ) : (\r\n                    <LinearProgress />\r\n                )}\r\n            </>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n    token: state.auth.token,\r\n    theme: state.app.theme,\r\n});\r\n\r\nexport default connect(mapStateToProps, { initializeApp })(App);\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\store.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\Header.js",["109"],"import styles from './Header.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { FormControlLabel, Switch as SwitchComponent } from '@material-ui/core';\r\nimport NightsIcon from '@material-ui/icons/Brightness4';\r\nimport SunIcon from '@material-ui/icons/Brightness7';\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport { setTheme } from '../../redux/reducers/AppReducer';\r\nimport { setLanguage } from '../../redux/reducers/AppReducer';\r\nimport { getLanguage, toggleLanguage } from '../../languages/index';\r\nimport { toggleTheme } from '../../themes/index';\r\n\r\nconst Header = (props) => {\r\n    const { isAuth, language, setTheme, setLanguage, theme } = props;\r\n    const currentLanguage = getLanguage(language);\r\n\r\n    const changeTheme = () => {\r\n        const selectedTheme = toggleTheme(theme);\r\n        setTheme(selectedTheme);\r\n    };\r\n\r\n    const changeLanguage = () => {\r\n        const selectedLanguage = toggleLanguage(language);\r\n        setLanguage(selectedLanguage);\r\n    };\r\n\r\n    return (\r\n        <AppBar>\r\n            <Toolbar className={styles.container}>\r\n                <Link component={RouterLink} to=\"/\" color=\"inherit\" underline=\"none\">\r\n                    <IconButton color=\"inherit\" variant=\"h6\" component={RouterLink} to=\"/feed\">\r\n                        Facebook\r\n                    </IconButton>\r\n                </Link>\r\n\r\n                {isAuth ? (\r\n                    <>\r\n                        <IconButton color=\"inherit\">\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div>\r\n                            <Button color=\"inherit\" component={RouterLink} to=\"/login\">\r\n                                {currentLanguage['Header.login']}\r\n                            </Button>\r\n\r\n                            <Button color=\"inherit\" component={RouterLink} to=\"/join\">\r\n                                {currentLanguage['Header.join']}\r\n                            </Button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n\r\n                <FormControlLabel\r\n                    className={styles.languageContainer}\r\n                    control={\r\n                        <SwitchComponent\r\n                            checked={theme === 'light'}\r\n                            onChange={changeTheme}\r\n                            className={styles.languageSwitch}\r\n                        />\r\n                    }\r\n                    label={\r\n                        <div>\r\n                            {theme === 'light' ? (\r\n                                <SunIcon className={styles.iconSun} />\r\n                            ) : (\r\n                                <NightsIcon className={styles.iconMoon} />\r\n                            )}\r\n                        </div>\r\n                    }\r\n                />\r\n                \r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"inherit\"\r\n                    startIcon={<TranslateIcon />}\r\n                    onClick={changeLanguage}\r\n                    className={styles.button}\r\n                >\r\n                    {language}\r\n                </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    language: state.app.language,\r\n    theme: state.app.theme,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setTheme, setLanguage })(Header);\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Error\\Error.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Login\\Login.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Newsfeed\\Newsfeed.js",["110","111","112","113","114","115","116"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { compose } from 'redux';\r\nimport { withLoginRedirect } from '../../hoc/withAuthRedirect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from './Newsfeed.module.css';\r\nimport { Container, Input } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport Post from '../Post/Post';\r\nimport loader from './assets/images/loader.gif';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { uploadImage } from './helper.js';\r\nimport { getPosts, setPost } from '../../redux/reducers/NewsReducer';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport russian from '../../languages/russian';\r\nimport english from '../../languages/english';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: '100%',\r\n        paddingTop: 70,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nfunction Newsfeed({ children, language, user, token, getPosts, setPost }) {\r\n    useEffect(() => {\r\n        getPosts(token);\r\n    }, []);\r\n\r\n    const currentLanguage = language === 'ENGLISH' ? english : russian;\r\n    const classes = useStyles();\r\n    const [postState, setPostState] = useState(<b>Post</b>);\r\n    const [textState, setTextState] = useState('');\r\n    const [state, setState] = useState({ file: '', imagePreviewUrl: '' });\r\n\r\n    let { imagePreviewUrl } = state;\r\n    let imagePreviewDiv = null;\r\n\r\n    if (imagePreviewUrl) {\r\n        imagePreviewDiv = (\r\n            <div>\r\n                <img src={imagePreviewUrl} alt={'Image Preview'} />\r\n                <button className={styles.closeButton} onClick={(e) => handleClose(e)}>\r\n                    <CloseIcon />\r\n                </button>\r\n            </div>\r\n        );\r\n    } else {\r\n        imagePreviewDiv = <div></div>;\r\n    }\r\n\r\n    function handleTextChange(e) {\r\n        setTextState(e.target.value);\r\n    }\r\n\r\n    function handleImageChange(e) {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            setState({\r\n                file: file,\r\n                imagePreviewUrl: reader.result,\r\n            });\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    function handleClose(e) {\r\n        setState({\r\n            file: '',\r\n            imagePreviewUrl: '',\r\n        });\r\n        imagePreviewDiv = <div></div>;\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setPostState(<CircularProgress style={{ height: '40px', width: '35px' }} />);\r\n        uploadImage(state.file).then((res) => {\r\n            setPost({\r\n                query: {\r\n                    login: user.login,\r\n                    text: `${textState}`,\r\n                    photo: res,\r\n                    user: { login: user.login, avatar: user.avatar },\r\n                },\r\n                token: token,\r\n            });\r\n            setPostState(<b>Post</b>);\r\n            setTextState('');\r\n            setState({ file: '', imagePreviewUrl: '' });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <div className={styles.newPost}>\r\n                <form onSubmit={(e) => handleSubmit(e)}>\r\n                    <div className={styles.inputContainer}>\r\n                        <Input\r\n                            placeholder=\"What's new?\"\r\n                            className={styles.input}\r\n                            multiline={true}\r\n                            onChange={(e) => handleTextChange(e)}\r\n                            value={textState}\r\n                        />\r\n                        <div className={styles.inputWrapper}>\r\n                            <input\r\n                                name=\"file\"\r\n                                type=\"file\"\r\n                                id=\"inputFile\"\r\n                                onChange={(e) => handleImageChange(e)}\r\n                                accept=\"image/x-png,image/gif,image/jpeg\"\r\n                                className={styles.inputFile}\r\n                                multiple\r\n                            />\r\n                            <label for=\"inputFile\" className={styles.inputFileButton}>\r\n                                <GetAppIcon className={styles.inputFileButtonImg} />\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.imgPreview}>{imagePreviewDiv}</div>\r\n                    <button\r\n                        className={styles.submitButton}\r\n                        type=\"submit\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                    >\r\n                        {postState}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            {children}\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        children: state.news.posts.map((el) => <Post post={el} />),\r\n        language: state.app.language,\r\n        user: state.auth.user,\r\n        token: state.auth.token,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{getPosts,setPost})(Newsfeed);\r\n//export default compose(connect(mapStateToProps,{getPosts,setPost}),withLoginRedirect)(Newsfeed);\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Post\\Post.js",["117","118"],"import { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styles from './Post.module.css';\r\nimport { Formik } from 'formik';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardMedia,\r\n    CardContent,\r\n    CardActions,\r\n    Avatar,\r\n    IconButton,\r\n    Typography,\r\n    Collapse,\r\n    InputBase,\r\n    Paper,\r\n} from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport userAvatar from './assets/images/user.svg';\r\nimport { withLoginRedirect } from '../../hoc/withAuthRedirect';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport loader from './assets/images/loader.gif';\r\n\r\nimport { setComment, getComments } from '../../redux/reducers/NewsReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 650,\r\n        margin: 'auto',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        boxShadow: '0px 0px 10px 3px #b9b8b8',\r\n        [theme.breakpoints.down('700')]: {\r\n            width: 350,\r\n        },\r\n    },\r\n    content: {\r\n        borderBottom: `2px solid grey`,\r\n    },\r\n    contentHeader: {\r\n        padding: `10px 0px`,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        backgroundSize: '100% 100%',\r\n        paddingTop: '56.25%',\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[250],\r\n    },\r\n    icon: {\r\n        font: 50,\r\n    },\r\n    commentSection: {\r\n        padding: '15px 0',\r\n    },\r\n    paper: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 700,\r\n        boxShadow: 'none',\r\n    },\r\n    input: {\r\n        border: '2px solid rgb(180, 178, 178)',\r\n        borderRadius: '5px',\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    liked: {\r\n        font: 50,\r\n        color: '#FF0000',\r\n    },\r\n}));\r\n\r\nconst Post = (props) => {\r\n    const { posts, post, user, token, setComment, getComments } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [liked, setLiked] = useState(false);\r\n    const [postState, setPostState] = useState(<SendIcon />);\r\n    const [textState, setTextState] = useState('');\r\n\r\n    const handleExpandClick = () => {\r\n        getComments({ posts, postId: post.id, token });\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleLikeClick = () => {\r\n        setLiked(!liked);\r\n    };\r\n\r\n    const handleTextChange = (e) => {\r\n        e.preventDefault();\r\n        setTextState(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setPostState(\r\n            <img src={loader} alt={'Loading...'} style={{ height: '40px', width: '35px' }} />,\r\n        );\r\n        setComment({\r\n            posts,\r\n            post,\r\n            token,\r\n            query: {\r\n                postId: post.id,\r\n                text: textState,\r\n                user: { login: user.login, avatar: user.avatar },\r\n            },\r\n        });\r\n        setPostState(<SendIcon />);\r\n        setTextState('');\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        {post.user?.avatar ? (\r\n                            <img src={post.user.avatar} alt=\"Avatar\" />\r\n                        ) : (\r\n                            <img src={userAvatar} alt=\"Avatar\" />\r\n                        )}\r\n                    </Avatar>\r\n                }\r\n                title={post.user.login}\r\n            />\r\n\r\n            {post.photo ? (\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={post.photo}\r\n                    title=\"Post image\"\r\n                    src={post.photo}\r\n                />\r\n            ) : null}\r\n\r\n            {post.text ? (\r\n                <CardContent className={classes.content}>\r\n                    <Typography color=\"textSecondary\">{post.text}</Typography>\r\n                </CardContent>\r\n            ) : null}\r\n\r\n            <CardActions disableSpacing className={classes.content}>\r\n                <IconButton\r\n                    className={liked ? classes.liked : classes.icon}\r\n                    aria-label=\"like\"\r\n                    onClick={handleLikeClick}\r\n                >\r\n                    <FavoriteIcon />\r\n                    {post.likesCount}\r\n                </IconButton>\r\n\r\n                <IconButton aria-label=\"comment\" onClick={handleExpandClick}>\r\n                    <CommentIcon />\r\n                    <Typography>{post.commentsCount}</Typography>\r\n                </IconButton>\r\n            </CardActions>\r\n\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit className={classes.commentSection}>\r\n                {post.comments?.map((comment) => {\r\n                    return (\r\n                        <CardContent className={classes.content}>\r\n                            <CardHeader\r\n                                className={classes.contentHeader}\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        {post.user.avatar ? (\r\n                                            <img src={comment.user.avatar} alt=\"Avatar\" />\r\n                                        ) : (\r\n                                            <img src={userAvatar} alt=\"Avatar\" />\r\n                                        )}\r\n                                    </Avatar>\r\n                                }\r\n                                title={comment.user.login ? comment.user.login : 'undefined'}\r\n                            />\r\n                            <Typography>{comment.text}</Typography>\r\n                        </CardContent>\r\n                    );\r\n                })}\r\n\r\n                <form onSubmit={(e) => handleSubmit(e)}>\r\n                    <div className={styles.inputContainer}>\r\n                        <Paper component=\"form\" className={classes.paper}>\r\n                            <InputBase\r\n                                className={classes.input}\r\n                                multiline={true}\r\n                                onChange={(e) => handleTextChange(e)}\r\n                                value={textState}\r\n                            />\r\n                            <IconButton\r\n                                type=\"submit\"\r\n                                className={classes.iconButton}\r\n                                aria-label=\"search\"\r\n                                onClick={(e) => handleSubmit(e)}\r\n                                disabled={textState ? false : true}\r\n                            >\r\n                                {postState}\r\n                            </IconButton>\r\n                        </Paper>\r\n                    </div>\r\n                </form>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.user,\r\n    token: state.auth.token,\r\n    posts: state.news.posts,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setComment, getComments }),\r\n    //withLoginRedirect\r\n)(Post);\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js",["119","120","121","122"],"import { NewsAPI } from '../../api/api';\r\n\r\nconst SET_POSTS = '/news/SET_POSTS';\r\nconst SET_POST = '/news/SET_POST';\r\nconst SET_COMMENTS = '/news/SET_COMMENTS';\r\nconst SET_COMMENT = '/news/SET_COMMENT';\r\nconst SET_LIKE = '/news/SET_LIKE';\r\nconst GET_LIKE = '/news/GET_LIKE';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n};\r\n\r\nexport const NewsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: [...action.posts],\r\n            };\r\n        case SET_POST:\r\n            return {\r\n                ...state,\r\n                posts: [action.post, ...state.posts],\r\n            };\r\n        case SET_COMMENTS:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((post, index) => {\r\n                    if (index === action.index) {\r\n                        post.comments = [...action.comments].reverse();\r\n                    }\r\n                    return post;\r\n                }),\r\n            };\r\n        case SET_COMMENT:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((post, index) => {\r\n                    if (index === action.index) {\r\n                        if (!post.comments) {\r\n                            post.comments = [];\r\n                        }\r\n                        post.comments.push(action.comment);\r\n                    }\r\n                    return post;\r\n                }),\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setPostsAction = (posts) => ({\r\n    type: SET_POSTS,\r\n    posts,\r\n});\r\n\r\nconst setPostAction = (post) => ({\r\n    type: SET_POST,\r\n    post,\r\n});\r\n\r\nconst setCommentsAction = (comments, index) => ({\r\n    type: SET_COMMENTS,\r\n    comments,\r\n    index,\r\n});\r\n\r\nconst setCommentAction = (userId, index) => ({\r\n    type: SET_COMMENT,\r\n    userId,\r\n    index,\r\n});\r\n\r\nconst setLikeAction = (userId, index) => ({\r\n    type: SET_COMMENTS,\r\n    userId,    \r\n    index,\r\n});\r\n\r\nconst getLikeAction = (comment, index) => ({\r\n    type: SET_COMMENT,\r\n    comment,\r\n    index,\r\n});\r\n\r\nexport const getPosts = (token) => {\r\n    return async (dispatch) => {\r\n        const response = await NewsAPI.getPosts(token);\r\n\r\n        if (response.status === 200 && response.data.status === 200) {\r\n            const { posts } = response.data;\r\n            dispatch(setPostsAction(posts));\r\n        }\r\n    };\r\n};\r\n\r\nexport const setPost = ({ token, query }) => {\r\n    return async (dispatch) => {\r\n        const response = await NewsAPI.sendPost(token, query);\r\n\r\n        if (response.status === 200 && response.data.status === 200) {\r\n            const { post } = response.data;\r\n\r\n            console.log({\r\n                ...post,\r\n                user: query.user,\r\n            });\r\n\r\n            dispatch(\r\n                setPostAction({\r\n                    ...post,\r\n                    user: query.user,\r\n                }),\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const setComment = ({ posts, post, token, query }) => {\r\n    return async (dispatch) => {\r\n        const index = posts.findIndex((el) => {\r\n            return el.id === post.id;\r\n        });\r\n\r\n        const response = await NewsAPI.sendComment(token, query);\r\n\r\n        console.log({\r\n            query,\r\n            response: response.data,\r\n        });\r\n\r\n        if (response.status === 200 && response.data.status === 200) {\r\n            dispatch(setCommentAction(query, index));\r\n        }\r\n    };\r\n};\r\n\r\nexport const getComments = ({ posts, postId, token }) => {\r\n    return async (dispatch) => {\r\n        const index = posts.findIndex((el) => {\r\n            return el.id === postId;\r\n        });\r\n\r\n        const response = await NewsAPI.getComments(token, postId);\r\n\r\n        if (response.status === 200 && response.data.status === 200) {\r\n            const { comments } = response.data;\r\n            dispatch(setCommentsAction(comments, index));\r\n        }\r\n    };\r\n};\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\api\\api.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\hoc\\withAuthRedirect.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Upload\\Upload.js",[],["123","124"],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Newsfeed\\helper.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\themes\\DarkTheme.js",["125","126","127"],"import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { green, orange, blue } from '@material-ui/core/colors';\r\n\r\nlet darkTheme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n        main: `#212121`,\r\n        background: {\r\n            default: '#222222',\r\n        },\r\n        text: {\r\n            primary: '#ffffff',\r\n        },\r\n    },\r\n});\r\nexport default darkTheme;\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\themes\\LightTheme.js",["128","129"],"import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { green, orange, blue } from '@material-ui/core/colors';\r\n\r\nlet lightTheme = createMuiTheme({\r\n    palette: {\r\n        main: blue[500],\r\n        background: {\r\n            default: '#fafafa',\r\n        },\r\n    },\r\n});\r\nexport default lightTheme;\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\languages\\english.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\languages\\russian.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\helpers\\localStorage.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Join\\Join.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AppReducer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\themes\\index.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\languages\\index.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":21},{"ruleId":"134","severity":1,"message":"138","line":13,"column":8,"nodeType":"136","messageId":"137","endLine":13,"endColumn":12},{"ruleId":"139","severity":1,"message":"140","line":24,"column":8,"nodeType":"141","endLine":24,"endColumn":10,"suggestions":"142"},{"ruleId":"134","severity":1,"message":"143","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":18},{"ruleId":"134","severity":1,"message":"144","line":1,"column":38,"nodeType":"136","messageId":"137","endLine":1,"endColumn":44},{"ruleId":"134","severity":1,"message":"145","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":17},{"ruleId":"134","severity":1,"message":"146","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":27},{"ruleId":"134","severity":1,"message":"147","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":14},{"ruleId":"139","severity":1,"message":"148","line":31,"column":8,"nodeType":"141","endLine":31,"endColumn":10,"suggestions":"149"},{"ruleId":"134","severity":1,"message":"150","line":33,"column":11,"nodeType":"136","messageId":"137","endLine":33,"endColumn":26},{"ruleId":"151","severity":1,"message":"152","line":45,"column":17,"nodeType":"153","endLine":45,"endColumn":68},{"ruleId":"134","severity":1,"message":"154","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":16},{"ruleId":"134","severity":1,"message":"146","line":24,"column":10,"nodeType":"136","messageId":"137","endLine":24,"endColumn":27},{"ruleId":"134","severity":1,"message":"155","line":7,"column":7,"nodeType":"136","messageId":"137","endLine":7,"endColumn":15},{"ruleId":"134","severity":1,"message":"156","line":8,"column":7,"nodeType":"136","messageId":"137","endLine":8,"endColumn":15},{"ruleId":"134","severity":1,"message":"157","line":77,"column":7,"nodeType":"136","messageId":"137","endLine":77,"endColumn":20},{"ruleId":"134","severity":1,"message":"158","line":83,"column":7,"nodeType":"136","messageId":"137","endLine":83,"endColumn":20},{"ruleId":"130","replacedBy":"159"},{"ruleId":"132","replacedBy":"160"},{"ruleId":"134","severity":1,"message":"161","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":15},{"ruleId":"134","severity":1,"message":"162","line":2,"column":17,"nodeType":"136","messageId":"137","endLine":2,"endColumn":23},{"ruleId":"134","severity":1,"message":"163","line":2,"column":25,"nodeType":"136","messageId":"137","endLine":2,"endColumn":29},{"ruleId":"134","severity":1,"message":"161","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":15},{"ruleId":"134","severity":1,"message":"162","line":2,"column":17,"nodeType":"136","messageId":"137","endLine":2,"endColumn":23},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'Post' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["166"],"'Typography' is defined but never used.","'useRef' is defined but never used.","'compose' is defined but never used.","'withLoginRedirect' is defined but never used.","'loader' is defined but never used.","React Hook useEffect has missing dependencies: 'getPosts' and 'token'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["167"],"'currentLanguage' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Formik' is defined but never used.","'SET_LIKE' is assigned a value but never used.","'GET_LIKE' is assigned a value but never used.","'setLikeAction' is assigned a value but never used.","'getLikeAction' is assigned a value but never used.",["164"],["165"],"'green' is defined but never used.","'orange' is defined but never used.","'blue' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [props, token]",{"range":"172","text":"173"},"Update the dependencies array to be: [getPosts, token]",{"range":"174","text":"175"},[914,916],"[props, token]",[1174,1176],"[getPosts, token]"]