[{"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\index.js":"1","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\App.js":"2","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\store.js":"3","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js":"4","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Header\\Header.js":"5","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Error\\Error.js":"6","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Login\\Login.js":"7","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\api\\api.js":"8","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\hoc\\withAuthRedirect.js":"9","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Upload\\Upload.js":"10","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Join\\Join.js":"11","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\helpers\\localStorage.js":"12","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\AppReducer.js":"13","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Footer\\Footer.js":"14","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js":"15","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\index.js":"16","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Post\\Post.js":"17","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Newsfeed\\Newsfeed.js":"18","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\index.js":"19","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Newsfeed\\helper.js":"20","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\english.js":"21","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\russian.js":"22","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\LightTheme.js":"23","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\DarkTheme.js":"24","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\NewsFeed\\NewsFeed.js":"25","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\NewsFeed\\helper.js":"26"},{"size":450,"mtime":1611675527805,"results":"27","hashOfConfig":"28"},{"size":1802,"mtime":1611906577923,"results":"29","hashOfConfig":"28"},{"size":953,"mtime":1611905835096,"results":"30","hashOfConfig":"28"},{"size":2324,"mtime":1611905532005,"results":"31","hashOfConfig":"28"},{"size":3833,"mtime":1611906621883,"results":"32","hashOfConfig":"28"},{"size":1333,"mtime":1611906475799,"results":"33","hashOfConfig":"28"},{"size":5852,"mtime":1611906642920,"results":"34","hashOfConfig":"28"},{"size":1717,"mtime":1611905531953,"results":"35","hashOfConfig":"28"},{"size":764,"mtime":1611905531971,"results":"36","hashOfConfig":"28"},{"size":508,"mtime":1610905286954,"results":"37","hashOfConfig":"28"},{"size":6527,"mtime":1611906633168,"results":"38","hashOfConfig":"28"},{"size":485,"mtime":1611675527811,"results":"39","hashOfConfig":"28"},{"size":1546,"mtime":1611905531975,"results":"40","hashOfConfig":"28"},{"size":3877,"mtime":1611903574357,"results":"41","hashOfConfig":"28"},{"size":3874,"mtime":1611905531976,"results":"42","hashOfConfig":"28"},{"size":285,"mtime":1611905531980,"results":"43","hashOfConfig":"28"},{"size":7505,"mtime":1611905531965,"results":"44","hashOfConfig":"28"},{"size":5255,"mtime":1611906351476,"results":"45","hashOfConfig":"28"},{"size":304,"mtime":1611905531972,"results":"46","hashOfConfig":"28"},{"size":512,"mtime":1611905531964,"results":"47","hashOfConfig":"28"},{"size":255,"mtime":1611905531972,"results":"48","hashOfConfig":"28"},{"size":345,"mtime":1611905531973,"results":"49","hashOfConfig":"28"},{"size":301,"mtime":1611905531979,"results":"50","hashOfConfig":"28"},{"size":380,"mtime":1611905531978,"results":"51","hashOfConfig":"28"},{"size":5255,"mtime":1611906351476,"results":"52","hashOfConfig":"28"},{"size":512,"mtime":1611905531964,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cpe4bj",{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\index.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\App.js",["111"],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\store.js",[],["112","113"],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Header\\Header.js",["114"],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Error\\Error.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Login\\Login.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\api\\api.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Upload\\Upload.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Join\\Join.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\helpers\\localStorage.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\AppReducer.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js",["115","116","117","118"],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\index.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Post\\Post.js",["119","120"],"import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport styles from './Post.module.css';\nimport { Formik } from 'formik';\nimport {\n    Card,\n    CardHeader,\n    CardMedia,\n    CardContent,\n    CardActions,\n    Avatar,\n    IconButton,\n    Typography,\n    Collapse,\n    InputBase,\n    Paper,\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport userAvatar from './assets/images/user.svg';\nimport { withLoginRedirect } from '../../hoc/withAuthRedirect';\nimport SendIcon from '@material-ui/icons/Send';\nimport loader from './assets/images/loader.gif';\n\nimport { setComment, getComments } from '../../redux/reducers/NewsReducer';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 650,\n        margin: 'auto',\n        marginTop: 10,\n        marginBottom: 10,\n        boxShadow: '0px 0px 10px 3px #b9b8b8',\n        [theme.breakpoints.down('700')]: {\n            width: 350,\n        },\n    },\n    content: {\n        borderBottom: `2px solid grey`,\n    },\n    contentHeader: {\n        padding: `10px 0px`,\n    },\n    media: {\n        height: 0,\n        backgroundSize: '100% 100%',\n        paddingTop: '56.25%',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[250],\n    },\n    icon: {\n        font: 50,\n    },\n    commentSection: {\n        padding: '15px 0',\n    },\n    paper: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 700,\n        boxShadow: 'none',\n    },\n    input: {\n        border: '2px solid rgb(180, 178, 178)',\n        borderRadius: '5px',\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    liked: {\n        font: 50,\n        color: '#FF0000',\n    },\n}));\n\nconst Post = (props) => {\n    const { posts, post, user, token, setComment, getComments } = props;\n\n    const classes = useStyles();\n\n    const [expanded, setExpanded] = useState(false);\n    const [liked, setLiked] = useState(false);\n    const [postState, setPostState] = useState(<SendIcon />);\n    const [textState, setTextState] = useState('');\n\n    const handleExpandClick = () => {\n        getComments({ posts, postId: post.id, token });\n        setExpanded(!expanded);\n    };\n\n    const handleLikeClick = () => {\n        setLiked(!liked);\n    };\n\n    const handleTextChange = (e) => {\n        e.preventDefault();\n        setTextState(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setPostState(\n            <img src={loader} alt={'Loading...'} style={{ height: '40px', width: '35px' }} />,\n        );\n        setComment({\n            posts,\n            post,\n            token,\n            query: {\n                postId: post.id,\n                text: textState,\n                user: { login: user.login, avatar: user.avatar },\n            },\n        });\n        setPostState(<SendIcon />);\n        setTextState('');\n    };\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                avatar={\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                        {post.user?.avatar ? (\n                            <img src={post.user.avatar} alt=\"Avatar\" />\n                        ) : (\n                            <img src={userAvatar} alt=\"Avatar\" />\n                        )}\n                    </Avatar>\n                }\n                title={post.user.login}\n            />\n\n            {post.photo ? (\n                <CardMedia\n                    className={classes.media}\n                    image={post.photo}\n                    title=\"Post image\"\n                    src={post.photo}\n                />\n            ) : null}\n\n            {post.text ? (\n                <CardContent className={classes.content}>\n                    <Typography color=\"textSecondary\">{post.text}</Typography>\n                </CardContent>\n            ) : null}\n\n            <CardActions disableSpacing className={classes.content}>\n                <IconButton\n                    className={liked ? classes.liked : classes.icon}\n                    aria-label=\"like\"\n                    onClick={handleLikeClick}\n                >\n                    <FavoriteIcon />\n                    {post.likesCount}\n                </IconButton>\n\n                <IconButton aria-label=\"comment\" onClick={handleExpandClick}>\n                    <CommentIcon />\n                    <Typography>{post.commentsCount}</Typography>\n                </IconButton>\n            </CardActions>\n\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit className={classes.commentSection}>\n                {post.comments?.map((comment) => {\n                    return (\n                        <CardContent className={classes.content}>\n                            <CardHeader\n                                className={classes.contentHeader}\n                                avatar={\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                        {post.user.avatar ? (\n                                            <img src={comment.user.avatar} alt=\"Avatar\" />\n                                        ) : (\n                                            <img src={userAvatar} alt=\"Avatar\" />\n                                        )}\n                                    </Avatar>\n                                }\n                                title={comment.user.login ? comment.user.login : 'undefined'}\n                            />\n                            <Typography>{comment.text}</Typography>\n                        </CardContent>\n                    );\n                })}\n\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <div className={styles.inputContainer}>\n                        <Paper component=\"form\" className={classes.paper}>\n                            <InputBase\n                                className={classes.input}\n                                multiline={true}\n                                onChange={(e) => handleTextChange(e)}\n                                value={textState}\n                            />\n                            <IconButton\n                                type=\"submit\"\n                                className={classes.iconButton}\n                                aria-label=\"search\"\n                                onClick={(e) => handleSubmit(e)}\n                                disabled={textState ? false : true}\n                            >\n                                {postState}\n                            </IconButton>\n                        </Paper>\n                    </div>\n                </form>\n            </Collapse>\n        </Card>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n    token: state.auth.token,\n    posts: state.news.posts,\n});\n\nexport default compose(\n    connect(mapStateToProps, { setComment, getComments }),\n    //withLoginRedirect\n)(Post);\n","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Newsfeed\\Newsfeed.js",["121","122","123","124","125","126","127"],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\index.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\Newsfeed\\helper.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\english.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\languages\\russian.js",[],"C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\LightTheme.js",["128","129"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport { green, orange, blue } from '@material-ui/core/colors';\n\nlet lightTheme = createMuiTheme({\n    palette: {\n        main: blue[500],\n        background: {\n            default: '#fafafa',\n        },\n    },\n});\nexport default lightTheme;\n","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\themes\\DarkTheme.js",["130","131","132"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport { green, orange, blue } from '@material-ui/core/colors';\n\nlet darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        main: `#212121`,\n        background: {\n            default: '#222222',\n        },\n        text: {\n            primary: '#ffffff',\n        },\n    },\n});\nexport default darkTheme;\n","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\NewsFeed\\NewsFeed.js",["133","134","135","136","137","138","139"],"import React, { useState, useEffect, useRef } from 'react';\nimport { compose } from 'redux';\nimport { withLoginRedirect } from '../../hoc/withAuthRedirect';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './NewsFeed.module.css';\nimport { Container, Input } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport Post from '../Post/Post';\nimport loader from './assets/images/loader.gif';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { uploadImage } from './helper.js';\nimport { getPosts, setPost } from '../../redux/reducers/NewsReducer';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport russian from '../../languages/russian';\nimport english from '../../languages/english';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '100%',\n        paddingTop: 70,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nfunction Newsfeed({ children, language, user, token, getPosts, setPost }) {\n    useEffect(() => {\n        getPosts(token);\n    }, []);\n\n    const currentLanguage = language === 'ENGLISH' ? english : russian;\n    const classes = useStyles();\n    const [postState, setPostState] = useState(<b>Post</b>);\n    const [textState, setTextState] = useState('');\n    const [state, setState] = useState({ file: '', imagePreviewUrl: '' });\n\n    let { imagePreviewUrl } = state;\n    let imagePreviewDiv = null;\n\n    if (imagePreviewUrl) {\n        imagePreviewDiv = (\n            <div>\n                <img src={imagePreviewUrl} alt={'Image Preview'} />\n                <button className={styles.closeButton} onClick={(e) => handleClose(e)}>\n                    <CloseIcon />\n                </button>\n            </div>\n        );\n    } else {\n        imagePreviewDiv = <div></div>;\n    }\n\n    function handleTextChange(e) {\n        setTextState(e.target.value);\n    }\n\n    function handleImageChange(e) {\n        let reader = new FileReader();\n        let file = e.target.files[0];\n\n        reader.onloadend = () => {\n            setState({\n                file: file,\n                imagePreviewUrl: reader.result,\n            });\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n    function handleClose(e) {\n        setState({\n            file: '',\n            imagePreviewUrl: '',\n        });\n        imagePreviewDiv = <div></div>;\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setPostState(<CircularProgress style={{ height: '40px', width: '35px' }} />);\n        uploadImage(state.file).then((res) => {\n            setPost({\n                query: {\n                    login: user.login,\n                    text: `${textState}`,\n                    photo: res,\n                    user: { login: user.login, avatar: user.avatar },\n                },\n                token: token,\n            });\n            setPostState(<b>Post</b>);\n            setTextState('');\n            setState({ file: '', imagePreviewUrl: '' });\n        });\n    }\n\n    return (\n        <Container className={classes.root}>\n            <div className={styles.newPost}>\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <div className={styles.inputContainer}>\n                        <Input\n                            placeholder=\"What's new?\"\n                            className={styles.input}\n                            multiline={true}\n                            onChange={(e) => handleTextChange(e)}\n                            value={textState}\n                        />\n                        <div className={styles.inputWrapper}>\n                            <input\n                                name=\"file\"\n                                type=\"file\"\n                                id=\"inputFile\"\n                                onChange={(e) => handleImageChange(e)}\n                                accept=\"image/x-png,image/gif,image/jpeg\"\n                                className={styles.inputFile}\n                                multiple\n                            />\n                            <label for=\"inputFile\" className={styles.inputFileButton}>\n                                <GetAppIcon className={styles.inputFileButtonImg} />\n                            </label>\n                        </div>\n                    </div>\n                    <div className={styles.imgPreview}>{imagePreviewDiv}</div>\n                    <button\n                        className={styles.submitButton}\n                        type=\"submit\"\n                        onClick={(e) => handleSubmit(e)}\n                    >\n                        {postState}\n                    </button>\n                </form>\n            </div>\n\n            {children}\n        </Container>\n    );\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        children: state.news.posts.map((el) => <Post post={el} />),\n        language: state.app.language,\n        user: state.auth.user,\n        token: state.auth.token,\n    };\n};\n\nexport default connect(mapStateToProps,{getPosts,setPost})(Newsfeed);\n//export default compose(connect(mapStateToProps,{getPosts,setPost}),withLoginRedirect)(Newsfeed);\n","C:\\Users\\grozz\\Desktop\\rsclone\\client\\src\\components\\NewsFeed\\helper.js",[],{"ruleId":"140","severity":1,"message":"141","line":22,"column":8,"nodeType":"142","endLine":22,"endColumn":10,"suggestions":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":18},{"ruleId":"148","severity":1,"message":"152","line":7,"column":7,"nodeType":"150","messageId":"151","endLine":7,"endColumn":15},{"ruleId":"148","severity":1,"message":"153","line":8,"column":7,"nodeType":"150","messageId":"151","endLine":8,"endColumn":15},{"ruleId":"148","severity":1,"message":"154","line":77,"column":7,"nodeType":"150","messageId":"151","endLine":77,"endColumn":20},{"ruleId":"148","severity":1,"message":"155","line":83,"column":7,"nodeType":"150","messageId":"151","endLine":83,"endColumn":20},{"ruleId":"148","severity":1,"message":"156","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":16},{"ruleId":"148","severity":1,"message":"157","line":24,"column":10,"nodeType":"150","messageId":"151","endLine":24,"endColumn":27},{"ruleId":"148","severity":1,"message":"158","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":44},{"ruleId":"148","severity":1,"message":"159","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":17},{"ruleId":"148","severity":1,"message":"157","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":27},{"ruleId":"148","severity":1,"message":"160","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":14},{"ruleId":"140","severity":1,"message":"161","line":31,"column":8,"nodeType":"142","endLine":31,"endColumn":10,"suggestions":"162"},{"ruleId":"148","severity":1,"message":"163","line":33,"column":11,"nodeType":"150","messageId":"151","endLine":33,"endColumn":26},{"ruleId":"164","severity":1,"message":"165","line":45,"column":17,"nodeType":"166","endLine":45,"endColumn":68},{"ruleId":"148","severity":1,"message":"167","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":15},{"ruleId":"148","severity":1,"message":"168","line":2,"column":17,"nodeType":"150","messageId":"151","endLine":2,"endColumn":23},{"ruleId":"148","severity":1,"message":"167","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":15},{"ruleId":"148","severity":1,"message":"168","line":2,"column":17,"nodeType":"150","messageId":"151","endLine":2,"endColumn":23},{"ruleId":"148","severity":1,"message":"169","line":2,"column":25,"nodeType":"150","messageId":"151","endLine":2,"endColumn":29},{"ruleId":"148","severity":1,"message":"158","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":44},{"ruleId":"148","severity":1,"message":"159","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":17},{"ruleId":"148","severity":1,"message":"157","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":27},{"ruleId":"148","severity":1,"message":"160","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":14},{"ruleId":"140","severity":1,"message":"161","line":31,"column":8,"nodeType":"142","endLine":31,"endColumn":10,"suggestions":"170"},{"ruleId":"148","severity":1,"message":"163","line":33,"column":11,"nodeType":"150","messageId":"151","endLine":33,"endColumn":26},{"ruleId":"164","severity":1,"message":"165","line":45,"column":17,"nodeType":"166","endLine":45,"endColumn":68},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initializeApp' and 'token'. Either include them or remove the dependency array. If 'initializeApp' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["171"],"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'SET_LIKE' is assigned a value but never used.","'GET_LIKE' is assigned a value but never used.","'setLikeAction' is assigned a value but never used.","'getLikeAction' is assigned a value but never used.","'Formik' is defined but never used.","'withLoginRedirect' is defined but never used.","'useRef' is defined but never used.","'compose' is defined but never used.","'loader' is defined but never used.","React Hook useEffect has missing dependencies: 'getPosts' and 'token'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["174"],"'currentLanguage' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'green' is defined but never used.","'orange' is defined but never used.","'blue' is defined but never used.",["175"],{"desc":"176","fix":"177"},"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"178","fix":"180"},"Update the dependencies array to be: [initializeApp, token]",{"range":"181","text":"182"},"Update the dependencies array to be: [getPosts, token]",{"range":"183","text":"184"},{"range":"185","text":"184"},[851,853],"[initializeApp, token]",[1144,1146],"[getPosts, token]",[1144,1146]]