[{"D:\\RS\\facebook\\rsclone\\client\\src\\index.js":"1","D:\\RS\\facebook\\rsclone\\client\\src\\App.js":"2","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\store.js":"3","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js":"4","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\Header.js":"5","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Error\\Error.js":"6","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Login\\Login.js":"7","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Newsfeed\\Newsfeed.js":"8","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Post\\Post.js":"9","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js":"10","D:\\RS\\facebook\\rsclone\\client\\src\\api\\api.js":"11","D:\\RS\\facebook\\rsclone\\client\\src\\helper.js":"12"},{"size":467,"mtime":1610300647375,"results":"13","hashOfConfig":"14"},{"size":721,"mtime":1610481510443,"results":"15","hashOfConfig":"14"},{"size":485,"mtime":1610479815957,"results":"16","hashOfConfig":"14"},{"size":176,"mtime":1610300647375,"results":"17","hashOfConfig":"14"},{"size":330,"mtime":1610300647374,"results":"18","hashOfConfig":"14"},{"size":386,"mtime":1610300647374,"results":"19","hashOfConfig":"14"},{"size":420,"mtime":1610300647375,"results":"20","hashOfConfig":"14"},{"size":5416,"mtime":1610734528362,"results":"21","hashOfConfig":"14"},{"size":2346,"mtime":1610480242140,"results":"22","hashOfConfig":"14"},{"size":2090,"mtime":1610734630178,"results":"23","hashOfConfig":"14"},{"size":403,"mtime":1610555406729,"results":"24","hashOfConfig":"14"},{"size":249,"mtime":1610729136886,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"101x991",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\RS\\facebook\\rsclone\\client\\src\\index.js",[],["54","55"],"D:\\RS\\facebook\\rsclone\\client\\src\\App.js",["56"],"import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Header from './components/Header/Header';\r\nimport Login from './components/Login/Login';\r\nimport Error from './components/Error/Error';\r\nimport Newsfeed from './components/Newsfeed/Newsfeed';\r\nimport Post from './components/Post/Post';\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Header />\r\n\r\n            <Switch>\r\n                <Route path=\"/login\" exact component={Login} />\r\n                <Route path=\"/feed\" component={Newsfeed} />\r\n                <Route component={Error} />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\store.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\Header.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Error\\Error.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Login\\Login.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Newsfeed\\Newsfeed.js",["57","58","59","60","61"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from './Newsfeed.module.css';\r\nimport { Container, Input } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport Api from '../../api/api.js';\r\nimport Post from '../Post/Post';\r\nimport urlAdd from '../../images/add.svg';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport io from 'socket.io-client';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getToday } from '../../helper';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nfunction Newsfeed({ children }) {\r\n    let socket = io();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        socket = io();\r\n        socket.on('get-message', function (data) {\r\n            dispatch({ type: 'UPDATE_POSTS', query: data });            \r\n        });\r\n        //console.log(socket);\r\n\r\n        // io.on('connection', function (socket) {\r\n        //     console.log('made socket connection');\r\n        //     socket.on('get-message', function (data) {\r\n        //         dispatch({ type: 'UPDATE_POSTS', query: data });\r\n        //         console.log(data);\r\n        //     });\r\n        // });\r\n    }, []);\r\n    const classes = useStyles();\r\n    const [textState, setTextState] = useState('');    \r\n    const [state, setState] = useState({ file: '', imagePreviewUrl: '' });\r\n    let { imagePreviewUrl } = state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) {\r\n        $imagePreview = (\r\n            <div>\r\n                <img src={imagePreviewUrl} />\r\n                <button\r\n                    className={styles.closeButton}\r\n                    onClick={(e) => _handleClose(e)}\r\n                >\r\n                    <CloseIcon />\r\n                </button>\r\n            </div>\r\n        );\r\n    } else {\r\n        $imagePreview = <div></div>;\r\n    }\r\n\r\n    function _handleTextChange(e) {\r\n        e.preventDefault();\r\n        setTextState(e.target.value);\r\n    }\r\n\r\n    function _handleImageChange(e) {\r\n        e.preventDefault();\r\n\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            setState({\r\n                file: file,\r\n                imagePreviewUrl: reader.result,\r\n            });\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    function _handleClose(e) {\r\n        e.preventDefault();\r\n        setState({\r\n            file: '',\r\n            imagePreviewUrl: '',\r\n        });\r\n        $imagePreview = <div></div>;\r\n    }\r\n\r\n    function _handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        socket.emit('send-message', {\r\n            id: 0,\r\n            username: 'asbarn',\r\n            text: `${textState}`,\r\n            img: state.imagePreviewUrl,\r\n            likes: 0,\r\n            dislikes: 0,\r\n            date: getToday(),\r\n        });\r\n        setTextState('');           \r\n        setState({ file: '', imagePreviewUrl: '' });\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <div className={styles.newPost}>\r\n                <form onSubmit={(e) => _handleSubmit(e)}>\r\n                    <div className={styles.inputContainer}>\r\n                        <Input\r\n                            placeholder=\"What's new?\"\r\n                            className={styles.input}\r\n                            multiline={true}\r\n                            onChange={(e) => _handleTextChange(e)}\r\n                           \r\n                            value={textState}\r\n                        />\r\n                        <div className={styles.inputWrapper}>\r\n                            <input\r\n                                name=\"file\"\r\n                                type=\"file\"\r\n                                id=\"inputFile\"\r\n                                onChange={(e) => _handleImageChange(e)}\r\n                                accept=\"image/x-png,image/gif,image/jpeg\"\r\n                                className={styles.inputFile}\r\n                                multiple\r\n                            />\r\n                            <label\r\n                                for=\"inputFile\"\r\n                                className={styles.inputFileButton}\r\n                            >\r\n                                <img\r\n                                    src={urlAdd}\r\n                                    alt=\"Upload img\"\r\n                                    className={styles.inputFileButtonImg}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.imgPreview}>{$imagePreview}</div>\r\n                    <button\r\n                        className={styles.submitButton}\r\n                        type=\"submit\"\r\n                        onClick={(e) => _handleSubmit(e)}\r\n                    >\r\n                        Post\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            {children}\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        children: state.news.arrPost.map((el) => <Post post={el} />),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Newsfeed);\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Post\\Post.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\api\\api.js",["62"],"import axios from 'axios';\r\n\r\nconst AuthAPI = {\r\n    login(login, password) {\r\n        return axios.post('/api/auth/login', { login, password });\r\n    },\r\n    join(login, password) {\r\n        return axios.post('/api/auth/join', { login, password });\r\n    },\r\n};\r\n\r\nconst NewsAPI = {\r\n    createPost(post) {\r\n        return axios.post('/feed', post);\r\n    },\r\n};\r\n\r\nexport default { NewsAPI, AuthAPI };\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\helper.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":1,"column":38,"nodeType":"69","messageId":"70","endLine":1,"endColumn":44},{"ruleId":"67","severity":1,"message":"72","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":11},{"ruleId":"67","severity":1,"message":"73","line":11,"column":10,"nodeType":"69","messageId":"70","endLine":11,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":26,"column":18,"nodeType":"76","endLine":26,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":48,"column":17,"nodeType":"79","endLine":48,"endColumn":46},{"ruleId":"80","severity":1,"message":"81","line":18,"column":1,"nodeType":"82","endLine":18,"endColumn":37},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Api' is defined but never used.","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'socket' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]