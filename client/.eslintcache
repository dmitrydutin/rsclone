[{"D:\\RS\\facebook\\rsclone\\client\\src\\index.js":"1","D:\\RS\\facebook\\rsclone\\client\\src\\App.js":"2","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\store.js":"3","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AppReducer.js":"4","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js":"5","D:\\RS\\facebook\\rsclone\\client\\src\\themes\\index.js":"6","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\helpers\\localStorage.js":"7","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js":"8","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\Header.js":"9","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Login\\Login.js":"10","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Join\\Join.js":"11","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Footer\\Footer.js":"12","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Error\\Error.js":"13","D:\\RS\\facebook\\rsclone\\client\\src\\api\\api.js":"14","D:\\RS\\facebook\\rsclone\\client\\src\\themes\\DarkTheme.js":"15","D:\\RS\\facebook\\rsclone\\client\\src\\themes\\LightTheme.js":"16","D:\\RS\\facebook\\rsclone\\client\\src\\languages\\index.js":"17","D:\\RS\\facebook\\rsclone\\client\\src\\hoc\\withAuthRedirect.js":"18","D:\\RS\\facebook\\rsclone\\client\\src\\languages\\english.js":"19","D:\\RS\\facebook\\rsclone\\client\\src\\languages\\russian.js":"20","D:\\RS\\facebook\\rsclone\\client\\src\\components\\NewsFeed\\NewsFeed.js":"21","D:\\RS\\facebook\\rsclone\\client\\src\\components\\NewsFeed\\helper.js":"22","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Post\\Post.js":"23","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\parts\\DesktopMenu.js":"24","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\parts\\MobileMenu.js":"25"},{"size":399,"mtime":1612103849827,"results":"26","hashOfConfig":"27"},{"size":2011,"mtime":1611941764826,"results":"28","hashOfConfig":"27"},{"size":987,"mtime":1611907061589,"results":"29","hashOfConfig":"27"},{"size":1784,"mtime":1611941764828,"results":"30","hashOfConfig":"27"},{"size":5308,"mtime":1612104881459,"results":"31","hashOfConfig":"27"},{"size":188,"mtime":1611941764829,"results":"32","hashOfConfig":"27"},{"size":505,"mtime":1611656562519,"results":"33","hashOfConfig":"27"},{"size":2438,"mtime":1611941764829,"results":"34","hashOfConfig":"27"},{"size":3707,"mtime":1612103849749,"results":"35","hashOfConfig":"27"},{"size":6507,"mtime":1611941764828,"results":"36","hashOfConfig":"27"},{"size":7420,"mtime":1611941764827,"results":"37","hashOfConfig":"27"},{"size":4529,"mtime":1611941764826,"results":"38","hashOfConfig":"27"},{"size":1364,"mtime":1611941764826,"results":"39","hashOfConfig":"27"},{"size":1902,"mtime":1611909468892,"results":"40","hashOfConfig":"27"},{"size":1896,"mtime":1612103922143,"results":"41","hashOfConfig":"27"},{"size":1896,"mtime":1612103930888,"results":"42","hashOfConfig":"27"},{"size":184,"mtime":1611941764828,"results":"43","hashOfConfig":"27"},{"size":794,"mtime":1611851434259,"results":"44","hashOfConfig":"27"},{"size":1885,"mtime":1612103850076,"results":"45","hashOfConfig":"27"},{"size":2614,"mtime":1612103850043,"results":"46","hashOfConfig":"27"},{"size":6712,"mtime":1612103850088,"results":"47","hashOfConfig":"27"},{"size":532,"mtime":1612103850077,"results":"48","hashOfConfig":"27"},{"size":10109,"mtime":1612104360926,"results":"49","hashOfConfig":"27"},{"size":4271,"mtime":1612103849749,"results":"50","hashOfConfig":"27"},{"size":5799,"mtime":1612103849750,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"101x991",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\RS\\facebook\\rsclone\\client\\src\\index.js",[],["107","108"],"D:\\RS\\facebook\\rsclone\\client\\src\\App.js",["109"],"import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { initializeApp } from './redux/reducers/AppReducer';\r\nimport { getTheme } from './themes/index';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { LinearProgress } from '@material-ui/core';\r\nimport Header from './components/Header/Header';\r\nimport Login from './components/Login/Login';\r\nimport Join from './components/Join/Join';\r\nimport NewsFeed from './components/NewsFeed/NewsFeed';\r\nimport Error from './components/Error/Error';\r\nimport Footer from './components/Footer/Footer';\r\n\r\nconst App = ({ token, theme, initialized, initializeApp }) => {\r\n    const currentTheme = getTheme(theme);\r\n\r\n    useEffect(() => {\r\n        initializeApp(token);\r\n    }, []);\r\n\r\n    return (\r\n        <ThemeProvider theme={createMuiTheme(currentTheme)}>\r\n            <>\r\n                <CssBaseline />\r\n                {initialized ? (\r\n                    <>\r\n                        <Header />\r\n\r\n                        <Switch>\r\n                            <Redirect exact from=\"/\" to=\"/feed\" />\r\n                            <Route path=\"/login\" exact component={Login} />\r\n                            <Route path=\"/join\" exact component={Join} />\r\n                            <Route path=\"/feed\" exact component={NewsFeed} />\r\n                            <Route component={Error} />\r\n                        </Switch>\r\n\r\n                        <Footer />\r\n                    </>\r\n                ) : (\r\n                    <LinearProgress />\r\n                )}\r\n            </>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n    token: state.auth.token,\r\n    theme: state.app.theme,\r\n});\r\n\r\nexport default connect(mapStateToProps, { initializeApp })(App);\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\redux\\store.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AppReducer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\NewsReducer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\themes\\index.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\helpers\\localStorage.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\Header.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Login\\Login.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Join\\Join.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Footer\\Footer.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Error\\Error.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\api\\api.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\themes\\DarkTheme.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\themes\\LightTheme.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\languages\\index.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\hoc\\withAuthRedirect.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\languages\\english.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\languages\\russian.js",[],["110","111"],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\NewsFeed\\NewsFeed.js",["112","113","114"],"import React, { useState, useEffect } from 'react';\r\nimport { compose } from 'redux';\r\nimport { withLogoutRedirect } from '../../hoc/withAuthRedirect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from './NewsFeed.module.css';\r\nimport { Container, Avatar } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport Post from '../Post/Post';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { uploadImage } from './helper.js';\r\nimport { getPosts, setPost } from '../../redux/reducers/NewsReducer';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport russian from '../../languages/russian';\r\nimport english from '../../languages/english';\r\nimport { Formik, Field } from 'formik';\r\nimport userAvatar from './assets/images/user.svg';\r\nimport { TextField } from 'formik-material-ui';\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: '100%',\r\n        paddingTop: 70,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nfunction Newsfeed({ children, language, user, token, getPosts, setPost }) {\r\n    useEffect(() => {\r\n        getPosts(token);\r\n    }, []);\r\n\r\n    const translate = language === 'english' ? english : russian;\r\n    const classes = useStyles();\r\n    const [postState, setPostState] = useState(translate['Newsfeed.post']);\r\n    const [state, setState] = useState({ file: '', imagePreviewUrl: '' });\r\n    const initialValues = { text: '' };\r\n    const PostSchema = Yup.object().shape({\r\n        text: Yup.string().required(translate['Newsfeed.required']),\r\n    });\r\n\r\n    let { imagePreviewUrl } = state;\r\n    let imagePreviewDiv = null;\r\n\r\n    if (imagePreviewUrl) {\r\n        imagePreviewDiv = (\r\n            <div>\r\n                <img src={imagePreviewUrl} alt={'Image Preview'} />\r\n                <button className={styles.closeButton} onClick={(e) => handleClose(e)}>\r\n                    <CloseIcon />\r\n                </button>\r\n            </div>\r\n        );\r\n    } else {\r\n        imagePreviewDiv = <div></div>;\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            setState({\r\n                file: file,\r\n                imagePreviewUrl: reader.result,\r\n            });\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        setState({\r\n            file: '',\r\n            imagePreviewUrl: '',\r\n        });\r\n        imagePreviewDiv = <div></div>;\r\n    };\r\n\r\n    const handleSubmit = (values, { setSubmitting }) => {\r\n        setPostState(<CircularProgress style={{ height: '40px', width: '35px' }} />);\r\n        uploadImage(state.file).then(async (res) => {\r\n            await setPost({\r\n                query: {\r\n                    login: user.login,\r\n                    text: values.text,\r\n                    photo: res,\r\n                    user: { login: user.login, avatar: user.avatar },\r\n                },\r\n                token: token,\r\n                setSubmitting,\r\n            });\r\n            values.text = '';\r\n            setPostState(translate['Newsfeed.post']);\r\n            setState({ file: '', imagePreviewUrl: '' });\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPostState(translate['Newsfeed.post']);\r\n    }, [language, setPostState]);\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <div className={styles.newPost}>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    onSubmit={handleSubmit}\r\n                    validationSchema={PostSchema}\r\n                >\r\n                    {({ submitForm, isSubmitting }) => (\r\n                        <form className={styles.form}>\r\n                            <div className={styles.inputContainer}>\r\n                                <Avatar aria-label=\"recipe\" className={styles.avatar}>\r\n                                    {user?.avatar ? (\r\n                                        <img src={user.avatar} alt=\"Avatar\" />\r\n                                    ) : (\r\n                                        <img src={userAvatar} alt=\"Avatar\" />\r\n                                    )}\r\n                                </Avatar>\r\n                                <Field\r\n                                    placeholder={translate['Newsfeed.placeholder']}\r\n                                    className={styles.input}\r\n                                    multiline={true}\r\n                                    name=\"text\"\r\n                                    component={TextField}\r\n                                />\r\n                                <div className={styles.inputWrapper}>\r\n                                    <input\r\n                                        name=\"file\"\r\n                                        type=\"file\"\r\n                                        id=\"inputFile\"\r\n                                        onChange={(e) => handleImageChange(e)}\r\n                                        accept=\"image/x-png,image/gif,image/jpeg\"\r\n                                        className={styles.inputFile}\r\n                                        multiple\r\n                                    />\r\n                                    <label htmlFor=\"inputFile\" className={styles.inputFileButton}>\r\n                                        <GetAppIcon className={styles.inputFileButtonImg} />\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.imgPreview}>{imagePreviewDiv}</div>\r\n                            <button\r\n                                disabled={isSubmitting}\r\n                                className={styles.submitButton}\r\n                                type=\"submit\"\r\n                                onClick={submitForm}\r\n                            >\r\n                                {postState}\r\n                            </button>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n\r\n            {children}\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        children: state.news.posts.map((el) => <Post post={el} />),\r\n        language: state.app.language,\r\n        user: state.auth.user,\r\n        token: state.auth.token,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getPosts, setPost }),\r\n    withLogoutRedirect,\r\n)(Newsfeed);\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\components\\NewsFeed\\helper.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Post\\Post.js",["115"],"import { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styles from './Post.module.css';\r\nimport { Formik, Field } from 'formik';\r\nimport { TextField } from 'formik-material-ui';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardMedia,\r\n    CardContent,\r\n    CardActions,\r\n    Avatar,\r\n    IconButton,\r\n    Typography,\r\n    Collapse,\r\n    Paper,\r\n} from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteIconBorder from '@material-ui/icons/FavoriteBorder';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport userAvatar from './assets/images/user.svg';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { setComment, getComments, setLike } from '../../redux/reducers/NewsReducer';\r\nimport * as Yup from 'yup';\r\nimport russian from '../../languages/russian';\r\nimport english from '../../languages/english';\r\n\r\nconst CommentSchema = Yup.object().shape({\r\n    text: Yup.string().min(1, 'Too Short!'),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 650,\r\n        margin: 'auto',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        padding: '0px 20px 20px',\r\n        [theme.breakpoints.down('700')]: {\r\n            width: 350,\r\n        },\r\n        backgroundColor: `${theme.palette.post.default} !important`,\r\n    },\r\n    content: {\r\n        borderBottom: `4px solid`,\r\n        borderColor: `${theme.palette.background.default} !important`,\r\n    },\r\n    header: {\r\n        fontSize: 17,\r\n        fontWeight: 450,\r\n    },\r\n    contentHeader: {\r\n        padding: `10px 0px`,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        backgroundSize: '100% 100%',\r\n        paddingTop: '56.25%',\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    icon: {\r\n        font: 50,\r\n    },\r\n    commentSection: {\r\n        padding: '15px 0',\r\n    },\r\n    paper: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 700,\r\n        boxShadow: 'none',\r\n        backgroundColor: `${theme.palette.background.default} !important`,\r\n    },\r\n    avatar: {\r\n        backgroundColor: `#5181b8!important`,\r\n    },\r\n    input: {\r\n        border: '2px solid',\r\n        borderRadius: '5px',\r\n        borderColor: `${theme.palette.primary.main} !important`,\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        padding: '5px 15px ',\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    liked: {\r\n        font: 50,\r\n        color: '#FF0000',\r\n    },\r\n    text: {\r\n        color: `${theme.palette.newsfeed.contrastText} !important`,\r\n        fontSize: '1rem',\r\n    },\r\n    icon: {\r\n        color: `${theme.palette.newsfeed.contrastText} !important`,\r\n        fontSize: '1.5rem',\r\n    },\r\n}));\r\n\r\nconst Post = (props) => {\r\n    const { posts, post, user, token, language, setComment, getComments, setLike } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const translate = language === 'english' ? english : russian;\r\n    const initialValues = { text: '' };\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [liked, setLiked] = useState(() => {\r\n        if (!post.likes.length) {\r\n            return false;\r\n        }\r\n        if (\r\n            post.likes.find((el) => {\r\n                return el.postId === post.id && el.userId === user.id;\r\n            })\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    const [postState, setPostState] = useState(<SendIcon />);\r\n\r\n    const handleExpandClick = () => {\r\n        getComments({ posts, postId: post.id, token });\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleLikeClick = async () => {\r\n        await setLike({ posts, postId: post.id, userId: user.id, token });\r\n        setLiked(() => {\r\n            if (\r\n                post.likes.find((el) => {\r\n                    return el.postId === post.id && el.userId === user.id;\r\n                })\r\n            ) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (values, { setSubmitting }) => {\r\n        setPostState(<CircularProgress style={{ height: '40px', width: '35px' }} />);\r\n        await setComment({\r\n            posts,\r\n            post,\r\n            token,\r\n            query: {\r\n                postId: post.id,\r\n                text: values.text,\r\n                user: { login: user.login, avatar: user.avatar },\r\n            },\r\n            setSubmitting,\r\n        });\r\n        values.text = '';\r\n        setPostState(<SendIcon />);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                classes={{\r\n                    title: classes.header,\r\n                }}\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        {post.user?.avatar ? (\r\n                            <img src={post.user.avatar} alt=\"Avatar\" />\r\n                        ) : (\r\n                            <img src={userAvatar} alt=\"Avatar\" />\r\n                        )}\r\n                    </Avatar>\r\n                }\r\n                title={post.user.login}\r\n            />\r\n\r\n            {post.photo ? (\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={post.photo}\r\n                    title=\"Post image\"\r\n                    src={post.photo}\r\n                />\r\n            ) : null}\r\n\r\n            {post.text ? (\r\n                <CardContent className={classes.content}>\r\n                    <Typography className={classes.text}>{post.text}</Typography>\r\n                </CardContent>\r\n            ) : null}\r\n\r\n            <CardActions disableSpacing className={classes.content}>\r\n                <IconButton\r\n                    className={liked ? classes.liked : classes.icon}\r\n                    aria-label=\"like\"\r\n                    onClick={handleLikeClick}\r\n                >\r\n                    {liked ? <FavoriteIcon /> : <FavoriteIconBorder />}\r\n\r\n                    <Typography className={classes.icon}>{post.likes.length} </Typography>\r\n                </IconButton>\r\n\r\n                <IconButton aria-label=\"comment\" onClick={handleExpandClick}>\r\n                    <CommentIcon />\r\n                    <Typography className={classes.icon}>{post.commentsCount}</Typography>\r\n                </IconButton>\r\n            </CardActions>\r\n\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit className={classes.commentSection}>\r\n                {post.comments?.map((comment) => {\r\n                    return (\r\n                        <CardContent className={classes.content}>\r\n                            <CardHeader\r\n                                classes={{\r\n                                    title: classes.header,\r\n                                }}\r\n                                className={classes.contentHeader}\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        {post.user.avatar ? (\r\n                                            <img src={comment.user.avatar} alt=\"Avatar\" />\r\n                                        ) : (\r\n                                            <img src={userAvatar} alt=\"Avatar\" />\r\n                                        )}\r\n                                    </Avatar>\r\n                                }\r\n                                title={comment.user.login ? comment.user.login : 'undefined'}\r\n                                subheader={<Typography>{comment.text}</Typography>}\r\n                            />\r\n                        </CardContent>\r\n                    );\r\n                })}\r\n\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    onSubmit={handleSubmit}\r\n                    validationSchema={CommentSchema}\r\n                >\r\n                    {({ submitForm, isSubmitting }) => (\r\n                        <form>\r\n                            <div className={styles.inputContainer}>\r\n                                <Paper component=\"form\" className={classes.paper}>\r\n                                    <Field\r\n                                        className={classes.input}\r\n                                        multiline={true}\r\n                                        component={TextField}\r\n                                        name=\"text\"\r\n                                        fullWidth={true}\r\n                                        placeholder={translate['Post.placeholder']}\r\n                                    />\r\n                                    <IconButton\r\n                                        type=\"submit\"\r\n                                        className={classes.iconButton}\r\n                                        aria-label=\"search\"\r\n                                        onClick={submitForm}\r\n                                        disabled={isSubmitting}\r\n                                    >\r\n                                        {postState}\r\n                                    </IconButton>\r\n                                </Paper>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.user,\r\n    token: state.auth.token,\r\n    posts: state.news.posts,\r\n    language: state.app.language,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setComment, getComments, setLike }),\r\n    //withLoginRedirect\r\n)(Post);\r\n","D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\parts\\DesktopMenu.js",[],"D:\\RS\\facebook\\rsclone\\client\\src\\components\\Header\\parts\\MobileMenu.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":23,"column":8,"nodeType":"122","endLine":23,"endColumn":10,"suggestions":"123"},{"ruleId":"116","replacedBy":"124"},{"ruleId":"118","replacedBy":"125"},{"ruleId":"120","severity":1,"message":"126","line":34,"column":8,"nodeType":"122","endLine":34,"endColumn":10,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":51,"column":17,"nodeType":"130","endLine":51,"endColumn":68},{"ruleId":"120","severity":1,"message":"131","line":104,"column":8,"nodeType":"122","endLine":104,"endColumn":32,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":109,"column":5,"nodeType":"135","messageId":"136","endLine":109,"endColumn":9},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initializeApp' and 'token'. Either include them or remove the dependency array. If 'initializeApp' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["139"],["137"],["138"],"React Hook useEffect has missing dependencies: 'getPosts' and 'token'. Either include them or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["140"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'translate'. Either include it or remove the dependency array.",["141"],"no-dupe-keys","Duplicate key 'icon'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [initializeApp, token]",{"range":"148","text":"149"},"Update the dependencies array to be: [getPosts, token]",{"range":"150","text":"151"},"Update the dependencies array to be: [language, setPostState, translate]",{"range":"152","text":"153"},[942,944],"[initializeApp, token]",[1289,1291],"[getPosts, token]",[3481,3505],"[language, setPostState, translate]"]