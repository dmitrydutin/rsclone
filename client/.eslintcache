[{"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\App.js":"2","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\redux\\store.js":"3","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Login\\Login.js":"4","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Header\\Header.js":"5","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Error\\Error.js":"6","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Upload\\Upload.js":"7","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js":"8","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\hoc\\withAuthRedirect.js":"9","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Login\\LoginForm\\LoginForm.js":"10","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\api\\api.js":"11","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Login\\LoginForm\\validate.js":"12","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Dialogs\\Chat\\Chat.js":"13","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Dialogs\\Chat\\Navbar\\Navbar.js":"14"},{"size":450,"mtime":1610994434539,"results":"15","hashOfConfig":"16"},{"size":701,"mtime":1610994699953,"results":"17","hashOfConfig":"16"},{"size":395,"mtime":1610927986981,"results":"18","hashOfConfig":"16"},{"size":899,"mtime":1610928078383,"results":"19","hashOfConfig":"16"},{"size":1592,"mtime":1610928078382,"results":"20","hashOfConfig":"16"},{"size":372,"mtime":1610927986978,"results":"21","hashOfConfig":"16"},{"size":566,"mtime":1611005651896,"results":"22","hashOfConfig":"16"},{"size":898,"mtime":1610928078385,"results":"23","hashOfConfig":"16"},{"size":759,"mtime":1610927986980,"results":"24","hashOfConfig":"16"},{"size":1613,"mtime":1610928078384,"results":"25","hashOfConfig":"16"},{"size":617,"mtime":1610928078382,"results":"26","hashOfConfig":"16"},{"size":452,"mtime":1610928078384,"results":"27","hashOfConfig":"16"},{"size":5544,"mtime":1611008384065,"results":"28","hashOfConfig":"16"},{"size":1607,"mtime":1610918469971,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"iuwoxw",{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\index.js",[],["63","64"],"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\App.js",["65","66","67","68"],"import CssBaseline from '@material-ui/core/CssBaseline';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Header from './components/Header/Header';\nimport Login from './components/Login/Login';\nimport Error from './components/Error/Error';\nimport Upload from './components/Upload/Upload';\nimport Chat from './components/Dialogs/Chat/Chat';\n\nconst App = () => {\n    return (\n        <>\n            <CssBaseline />\n            <Header />\n\n            <Switch>\n            <Chat />\n                {/* <Route path=\"/login\" exact component={Login} />\n                <Route component={Error} /> */}\n            </Switch>\n\n            {/* <Upload /> */}\n        </>\n    );\n};\n\nexport default App;\n","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\redux\\store.js",[],"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Login\\Login.js",[],"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Error\\Error.js",[],"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Upload\\Upload.js",["69"],"import { cloudinary } from '../../api/api';\nimport clip from '../Dialogs/Chat/assets/images/clip.png'\n\nconst Upload = () => {\n    const uploadImage = async (e) => {\n        const response = await cloudinary.uploadImage(e.target.files[0]);\n        const imageURL = response.data.secure_url;\n        console.log('imageURL', imageURL);\n    };\n\n    return (\n        <main>\n            <input\n                type=\"file\"\n                placeholder=\"Upload an image\"\n                onChange={uploadImage}\n            />\n        </main>\n    );\n};\n\nexport default Upload;\n","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\redux\\reducers\\AuthReducer.js",[],"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Login\\LoginForm\\LoginForm.js",[],"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\api\\api.js",[],"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Login\\LoginForm\\validate.js",[],["70","71"],"C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Dialogs\\Chat\\Chat.js",["72"],"import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Fab from '@material-ui/core/Fab';\nimport SendIcon from '@material-ui/icons/Send';\nimport Messages from '../last-messages.json'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import Typography from '@material-ui/core/Typography';\nimport Navbar from './Navbar/Navbar'\nimport styles from './Chat.module.css'\nimport clip from './assets/images/clip.png'\nimport Upload from '../../Upload/Upload';\nimport smile from './assets/images/smile.svg'\n\n\nconst Chat = (props) => {\n\n    return (\n        <div>\n            <Grid container component={Paper} className={styles.chatSection}>\n                <Grid item xs={3} className={styles.borderRight500}>\n                    <Grid item xs={12} style={{ padding: '18px' }}>\n                        <TextField label=\"Search\" variant=\"outlined\" fullWidth />\n                    </Grid>\n                    <Divider />\n                    <List className={styles.list}>\n                        {Messages.map(({ id, name, message, avatar }) => (\n                            <React.Fragment key={id}>\n                                <ListItem button>\n                                    <ListItemAvatar>\n                                        <Avatar alt={name} src={avatar} />\n                                    </ListItemAvatar>\n                                    <ListItemText primary={name} secondary={message} />\n                                </ListItem>\n                            </React.Fragment>\n                        ))}\n                    </List>\n                    <Divider />\n                </Grid>\n                <Grid item xs={9}>\n                    <Grid item xs={12}>\n                        <Navbar />\n                    </Grid>\n                    <List className={styles.messageArea}>\n                        <ListItem className={styles.listItemFriend}>\n                            <ListItemAvatar>\n                                <Avatar className={styles.avatar} alt={Messages[0].name} src={Messages[0].avatar} />\n                            </ListItemAvatar>\n                            <ListItemText className={styles.listItemText} primary={Messages[0].name} secondary={Messages[0].message}>\n                            </ListItemText>\n                        </ListItem>\n                        <ListItem className={styles.listItemSelf}>\n                            <ListItemText className={styles.listItemText} primary={Messages[1].name} secondary={Messages[1].message}>\n                            </ListItemText>\n                        </ListItem>\n                        <ListItem className={styles.listItemFriend}>\n                            <ListItemAvatar>\n                                <Avatar className={styles.avatar} alt={Messages[0].name} src={Messages[0].avatar} />\n                            </ListItemAvatar>\n                            <ListItemText className={styles.listItemText} primary={Messages[0].name} secondary={Messages[2].message}>\n                            </ListItemText>\n                        </ListItem>\n                        <ListItem className={styles.listItemSelf}>\n                            <ListItemText className={styles.listItemText} primary={Messages[1].name} secondary={Messages[3].message}>\n                            </ListItemText>\n                        </ListItem>\n                        <ListItem className={styles.listItemFriend}>\n                            <ListItemAvatar>\n                                <Avatar className={styles.avatar} alt={Messages[0].name} src={Messages[0].avatar} />\n                            </ListItemAvatar>\n                            <ListItemText className={styles.listItemText} primary={Messages[0].name} secondary={Messages[4].message}>\n                            </ListItemText>\n                        </ListItem>\n                        <ListItem className={styles.listItemSelf}>\n                            <ListItemText className={styles.listItemText} primary={Messages[1].name} secondary={Messages[5].message}>\n                            </ListItemText>\n                        </ListItem>\n                    </List>\n                    <Grid container className={styles.sendMessageContainer}>\n                        <Grid item xs={1} align=\"left\" className={styles.gridClip}>\n                            <img className={styles.clip} src={clip} alt='clip'></img>\n                            {/* <Upload></Upload> */}\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField label=\"Type Something\" fullWidth />\n                        </Grid>\n                        <Grid item xs={1} align=\"right\">\n                            <img className={styles.clip} src={smile} alt='smile'></img>\n                        </Grid>\n                        <Grid item xs={1} align=\"right\" style={{flexBasis: 'unset'}}>\n                            <Fab color=\"primary\" aria-label=\"add\" className={styles.sendIcon}><SendIcon /></Fab>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Chat;\n","C:\\Users\\User\\Desktop\\rs-clone-chat\\rsclone\\client\\src\\components\\Dialogs\\Chat\\Navbar\\Navbar.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":18,"nodeType":"79","messageId":"80","endLine":2,"endColumn":23},{"ruleId":"77","severity":1,"message":"81","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"77","severity":1,"message":"82","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":13},{"ruleId":"77","severity":1,"message":"83","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":14},{"ruleId":"77","severity":1,"message":"84","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":12},{"ruleId":"73","replacedBy":"85"},{"ruleId":"75","replacedBy":"86"},{"ruleId":"77","severity":1,"message":"83","line":18,"column":8,"nodeType":"79","messageId":"80","endLine":18,"endColumn":14},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Error' is defined but never used.","'Upload' is defined but never used.","'clip' is defined but never used.",["87"],["88"],"no-global-assign","no-unsafe-negation"]